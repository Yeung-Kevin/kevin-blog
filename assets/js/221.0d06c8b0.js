(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{573:function(t,i,e){"use strict";e.r(i);var o=e(25),v=Object(o.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",[e("span",[e("div",[e("div",[e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("select模块主要是用于IO多路复用")])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"font-size":"14pt"}},[t._v("select 提供了三个方法: ")])]),e("div",[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("select -> window 仅支持select")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("poll -> linux可用")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("eopll -> linux可用")])])])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("1.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(".select()方法")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("三个必传的参数:")])])]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("输入列表 -> 就是IO 中的 I -> 监听输入列表中的内容是否有用户进行了连接（是否有数据返回），一般是监听 sk 和 conn")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("输出列表 -> 就是IO 中的 O")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("错误列表")])])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v(".select()方法的返回值是一个元组，元组中包含了输入列表（"),e("span",{staticStyle:{color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("包含 以被用户连接的sk 或 多个得到数据的conn对象")]),t._v("）、输出列表、错误列表")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("使用select实现IO多路复用")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t._v("# server.py")])]),e("div",[e("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[e("br")])]),e("div",[t._v("import socket")]),e("div",[t._v("import select")]),e("div",[e("br")]),e("div",[t._v("sk = socket.socket()")]),e("div",[t._v("sk.bind(('127.0.0.1', 8080))")]),e("div",[t._v("sk.listen()")]),e("div",[e("br")]),e("div",[t._v("read_lst = [sk]  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 输入列表")])],1),e("div",[t._v("while True:")]),e("div",[t._v("    rl, wl, xl = select.select(read_lst, [], []) "),e("font",[e("font",{attrs:{color:"#E30000"}},[t._v(" # 监听输入列表中sk或多个conn是否有用户进行连接（是否有数据返回），如果有就会")]),e("b",[e("font",{attrs:{color:"#AD0000"}},[t._v("返回一个列表中包含 以被用户连接的sk 或 多个得到数据的conn对象 ")])],1)],1),e("font",{attrs:{color:"#E30000"}},[t._v("（因为有多个客户端对服务端进行连接，所以才会有多个conn对象）")])],1),e("div",[t._v("    for item in rl:  "),e("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 循环select的返回值中的输入列表，因为里面包含了 以被用户连接的sk 或 多个得到数据的conn对象（因为有多个客户端对服务端进行连接，所以才会有多个conn对象）")])],1),e("div",[t._v("        if item == sk: "),e("font",{attrs:{color:"#41AD1C"}},[t._v(" # 判断是否是sk对象（因为sk对象只会有一个，并且是同一个），如果等于sk对象那么就代表有新的客户端对服务端进行连接")])],1),e("div",[t._v("            conn, addr = item.accept()  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 得到一个conn客户端对象")])],1),e("div",[t._v("            read_lst.append(conn)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 将 与服务端进行链接了的客户端对象放入 read_lst 输入列表中")])],1),e("div",[t._v("        else:  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 如果不是sk对象就是conn对象")])],1),e("div",[t._v("            ret = item.recv(1024).decode('utf-8')")]),e("div",[t._v("            if not ret:  "),e("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 判断接收到的消息是否为空，如果是就说明客户端已经断开连接这样就关闭该客户端并且从read_lst输入列表中删除，如果不为空就打印该数据并且向客户端回一条消息")])],1),e("div",[t._v("                item.close()")]),e("div",[t._v("                read_lst.remove(item)")]),e("div",[t._v("            else:")]),e("div",[t._v("                print(ret)")]),e("div",[t._v("                item.send(ret.upper().encode('utf-8'))")])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("# client.py")]),e("div",[e("br")]),e("div",[t._v("import socket")]),e("div",[t._v("import time")]),e("div",[t._v("from threading import Thread")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("def fun():")]),e("div",[t._v("    sk = socket.socket()")]),e("div",[t._v("    sk.connect(('127.0.0.1', 8080))")]),e("div",[t._v("    for i in range(10):")]),e("div",[t._v("        time.sleep(2)")]),e("div",[t._v("        sk.send(b'hello')")]),e("div",[t._v("        print(sk.recv(1024))")]),e("div",[t._v("    sk.close()")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("for i in range(10):")]),e("div",[t._v("    Thread(target=fun).start()")])]),e("div",[e("br")]),e("div",[e("br")]),e("div",[e("br")])]),e("div",[e("br")])])])])}),[],!1,null,null,null);i.default=v.exports}}]);