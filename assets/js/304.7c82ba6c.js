(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{657:function(t,i,o){"use strict";o.r(i);var r=o(25),e=Object(r.a)({},(function(){var t=this,i=t.$createElement,o=t._self._c||i;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("div",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[t._v("可迭代对象 ->")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt"}},[t._v("可迭代对象")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v("可以迭代但不是迭代器")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[t._v("list, ")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v("dic")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", str")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", set")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", tuple")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", f = open()(文件句柄)")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", range()")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v(", enumerate")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("可迭代的不一定是迭代器，但迭代器一定是可迭代的，因为迭代器中一定有 __iter__ 方法")])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("1. 可迭代: Iterable（可循环）")])])]),o("div",[o("br")]),o("div",[o("font",{staticStyle:{"font-size":"12pt"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("可迭代协议：只要含有__iter__方法都是可迭代")])])],1),o("div"),o("ul",[o("li",[o("div",[t._v("dir() -> 查看对象所拥有的方法 -> 判断是否为可迭代的 -> 常用方法")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterable_fn = dir([])")]),o("div",[o("br")]),o("div",[t._v("print('__iter__' in iterable_fn) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# True")])],1)]),o("div",[o("br")])]),o("ul",[o("li",[o("div",[t._v("isinstance() -> 判断一个对象是不是某个东西 -> 判断是否为可迭代的")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("from collections import Iterable")]),o("div",[t._v("from collections import Iterator")]),o("div",[o("br")]),o("div",[t._v("print(isinstance([], Iterable)) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# True")])],1),o("div",[t._v("print(isinstance([], Iterator)) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# False")])],1)]),o("div",[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("2. 迭代器: ")])]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("Iterator")])]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("->")])]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("迭代器")]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("可以被 for 循环")])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("迭代器的好处: ")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("从容器类型中一个一个的取值，会把所有的值都取到，而且所有数据只能取一次，取完就没有。（"),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("一定要记住该原则")]),t._v("）")])]),o("li",[o("div",[t._v("节省内存空间 -> 迭代器并不会在内存中再占用一大块内存，而是随着循环每次生成一个，每次执行__next__()就会每次返回一个")])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("迭代器协议: 内部含有 __next__ 和 __iter__方法的就是迭代器 -> ")]),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("__iter__方法 位于 ")]),o("span",{staticStyle:{"font-size":"12pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("Iterable里面，通过调用 ")]),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("__iter__ 方法返回一个迭代器")]),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v(" -> ")]),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("Iterator: 迭代器 ")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("判断是否是迭代器 -> 判断是否有 __next__ 和 __iter__ 方法")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("def is_iterator(obj):")]),o("div",[t._v("    list_fn = dir(obj)")]),o("div",[t._v("    iter_result = '__iter__' in list_fn")]),o("div",[t._v("    if iter_result:")]),o("div",[t._v("        iter_fn = dir(obj.__iter__())")]),o("div",[t._v("        iterator_result = '__next__' in iter_fn")]),o("div",[t._v("        if iterator_result:")]),o("div",[t._v("            return '是迭代器'")]),o("div",[t._v("        else:")]),o("div",[t._v("            return '可迭代，但不是迭代器'")]),o("div",[t._v("    else:")]),o("div",[t._v("        return '不可迭代'")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("print(is_iterator([]))")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("获取迭代器: .__iter__()  -> 当可迭代对象调用了 .__iter__() 会返回一个迭代器")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterator = [].__iter__() "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# <list_iterator object at 0x000001EE4B5C3550> 看到 iterator 单词就应该知道它是一个迭代器")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("查看只属于迭代器的方法 -> dir([1,2].__iter__())是列表迭代器中实现的所有方法，dir([1,2])是列表中实现的所有方法,都是以列表的形式返回给我们的，为了看的更清楚，我们分别把他们转换成集合，然后取差集。")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# print(dir([1,2].__iter__()))")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# print(dir([1,2]))")])],1),o("div",[o("br")]),o("div",[t._v("print(set(dir([1, 2].__iter__())) - set(dir([1, 2]))) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# {'__next__', '__length_hint__', '__setstate__'}")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("__length_hint__() -> 获取迭代器中元素的长度")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterator = [1, 2, 3, 4, 5, 6].__iter__()")]),o("div",[o("br")]),o("div",[t._v("print(iterator.__length_hint__()) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 6")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("__next__() -> 一个一个的取值 -> 可以不依赖 for 循环挨个取值 ->  "),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("如果我们一直取next取到迭代器里已经没有元素了，就会抛出一个异常StopIteration，告诉我们，列表中已经没有有效的元素了。")])])])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterator = [1, 2, 3, 4, 5, 6].__iter__()")]),o("div",[o("br")]),o("div",[t._v("print(iterator.__next__()) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 1")])],1),o("div",[t._v("print(iterator.__next__()) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 2")])],1),o("div",[t._v("print(iterator.__next__()) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 3")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("__setstate__ -> 根据索引值指定从哪里开始迭代")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterator = [1, 2, 3, 4, 5, 6].__iter__()")]),o("div",[o("br")]),o("div",[t._v("iterator.__setstate__(3)")]),o("div",[t._v("print(iterator.__next__())")]),o("div",[t._v("print(iterator.__next__())")]),o("div",[t._v("print(iterator.__next__())")])]),o("div",[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("iterator = [1, 2, 3, 4, 5, 6].__iter__()")]),o("div",[t._v("iterator.__setstate__(3)")]),o("div",[o("br")]),o("div",[t._v("for i in iterator:")]),o("div",[t._v("    print(i)")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("3. for 循环的执行机制 -> 了解就可以")])]),o("div",[o("font",{staticStyle:{"font-size":"12pt"}},[o("br")])],1),o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("在执行 for 循环的时候它首先会判断该对象是否是可迭代的，然后再判断是否是迭代器，如果是迭代器再执行迭代器中 __next__方法")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("4. for 循环 和 迭代器的区别 ")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("for循环: 多个 for 循环 循环一个可迭代对象的时候，for循环会在自身内部生成一个迭代器")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("lis = [1, 2, 3, 4]")]),o("div",[t._v("for i in lis:")]),o("div",[t._v("    print(i)")]),o("div",[o("br")]),o("div",[t._v("for i2 in lis:")]),o("div",[t._v("    print(i2)")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("迭代器: 如果迭代器里的值都被取过一遍以后（取完了）, 那么迭代器再被调用的时候里面的值是空的 -> 因为迭代器里的值只能取一遍，取完就没有了")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("lis = [1, 2, 3, 4]")]),o("div",[t._v("iterator = lis.__iter__()")]),o("div",[o("br")]),o("div",[t._v("i_lis = list(iterator)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# [1, 2, 3, 4] 此时，迭代器里的所有值都给了 list")])],1),o("div",[t._v("i_lis2 = list(iterator) "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# [] 迭代器里的值都被取完了")])],1)]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("5. ")]),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("iter() 和 next() ")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("iter() 等同于 __iter__() next() 等同于 __next__() 在以后日常使用中尽量使用 iter() 和 next()，在这里使用 __iter__() 和 __next__() 是为了说明")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("iter(可迭代对象)")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("lis = [1, 2, 3]")]),o("div",[t._v("iterator = iter(lis)")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 等同于")])],1),o("div",[o("br")]),o("div",[t._v("iterator = lis.__iter__()")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("next(迭代器)")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("lis = [1, 2, 3]")]),o("div",[t._v("iterator = iter(lis)")]),o("div",[o("br")]),o("div",[t._v("num = next(iterator)")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 等同于")])],1),o("div",[o("br")]),o("div",[t._v("num = iterator.__next__()")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("5. 总结")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"line-height":"1.5"}},[t._v("迭代是访问集合元素的一种方式,迭代器是一个能够记住遍历位置的对象")])])]),o("li",[o("div",{staticStyle:{"letter-spacing":"normal",orphans:"2","white-space":"pre-wrap",widows:"2","word-spacing":"0px"}},[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("迭代器对象从集合的第一个元素开始访问,直到所有的元素都被访问完结束")])])]),o("li",[o("div",{staticStyle:{"letter-spacing":"normal",orphans:"2","white-space":"pre-wrap",widows:"2","word-spacing":"0px"}},[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("如果想访问一个元素,需要把这个元素前面的所有元素都遍历后,才可以访问")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",{staticStyle:{"letter-spacing":"normal",orphans:"2","white-space":"pre-wrap",widows:"2","word-spacing":"0px"}},[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("凡是可作用于 for 循环的对象都是 Iterable（可迭代）")])])]),o("li",[o("div",{staticStyle:{"letter-spacing":"normal",orphans:"2","white-space":"pre-wrap",widows:"2","word-spacing":"0px"}},[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("凡是可作用于 __next__() 的函数的对象都是Iterator （迭代器）")])])]),o("li",[o("div",{staticStyle:{"letter-spacing":"normal",orphans:"2","white-space":"pre-wrap",widows:"2","word-spacing":"0px"}},[o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("__iter__()函数用于把Iterable")]),o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("（可迭代）")]),o("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("容器,变成Iterator（迭代器）")])])])]),o("div",[o("br")])]),o("div",[o("br")])])])])}),[],!1,null,null,null);i.default=e.exports}}]);