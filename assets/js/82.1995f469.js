(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{431:function(t,i,a){"use strict";a.r(i);var o=a(25),e=Object(o.a)({},(function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",[a("span",[a("div",[a("div",[a("font",{staticStyle:{"font-size":"14pt"}},[t._v("async await 的作用: 简化 Promise 的操作 代替了 .then() 的操作")])],1),a("div",[a("font",{staticStyle:{"font-size":"14pt"}},[a("br")])],1),a("div",[a("span",{staticStyle:{"font-size":"14pt"}},[t._v("async await 的适用前提: 必须和函数搭配使用")])]),a("div",[a("font",{staticStyle:{"font-size":"14pt"}},[a("br")])],1),a("div",[a("span",{staticStyle:{"font-size":"14pt"}},[t._v("async await 的说明:")])]),a("div",[a("span",{staticStyle:{"font-size":"14pt"}},[a("br")])]),a("ul",[a("li",[a("div",[a("font",{staticStyle:{"font-size":"14pt"}},[t._v("async -> 在要使用 await 的函数开头添加上 async")])],1)]),a("li",[a("div",[a("font",{staticStyle:{"font-size":"14pt"}},[t._v("await -> 在 Promise 对象前面添加上 await，作用是等待 Promise 返回成功的数据，如果返回失败的结果 await 下面的代码也不会被执行")])],1)])]),a("div",[a("span",{staticStyle:{"font-size":"14pt"}},[a("br")])]),a("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[a("div",[t._v("let asyncPromise = function (data) {")]),a("div",[t._v("    return new Promise((resolve, reject) => {")]),a("div",[t._v("        setTimeout(() => {")]),a("div",[t._v("            resolve(data + 1);")]),a("div",[t._v("        }, 1000)")]),a("div",[t._v("    })")]),a("div",[t._v("};")]),a("div",[a("br")]),a("div",[t._v("async function runPromise() {  "),a("font",{attrs:{color:"#41AD1C"}},[t._v("// 在要使用 await 的函数开头添加上 async")])],1),a("div",[t._v("    let data1 = await asyncPromise(1);  "),a("font",{attrs:{color:"#41AD1C"}},[t._v("// 在 Promise 对象前面加上 await，等待 Promise 返回成功的数据，如果返回失败的结果 await 下面的代码也不会被执行")])],1),a("div",[t._v("    console.log(data1);")]),a("div",[t._v("    let data2 = await asyncPromise(data1 + 1);")]),a("div",[t._v("    console.log(data2);")]),a("div",[t._v("}")]),a("div",[a("br")]),a("div",[t._v("runPromise();")])]),a("div",[a("br")])])])])])}),[],!1,null,null,null);i.default=e.exports}}]);