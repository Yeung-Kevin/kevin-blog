(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{428:function(t,o,i){"use strict";i.r(o);var e=i(25),v=Object(e.a)({},(function(){var t=this,o=t.$createElement,i=t._self._c||o;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("div",[i("span",[i("div",[i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("1.")]),t._v(" "),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("Promise 的基本用法")]),i("br")]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[t._v("Promise 一般用于处理异步的回调函数 或 处理回调地狱（函数嵌套函数）")])])]),i("div",[i("br")]),i("ul",[i("li",[i("div",[t._v("使用 Promise 需要传递 "),i("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("一个函数")]),t._v(" 且该函数需要接收两个参数 "),i("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("一个参数代表成功 一个参数代表失败")])],1)])]),i("div",[i("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("/* Promise 默认写法 */")])],1),i("div",[t._v("let p = new Promise((resolve, reject) => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// resolve, reject 可以用别的命名")])],1),i("div",[t._v("    setTimeout(() => {")]),i("div",[t._v("        console.log('Promise默认写法：' + 1);")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("/*")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("            resolve(); 成功状态")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("            reject(); 失败状态")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[i("br")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}}),i("font",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("如果不给成功或者失败 那么 p.then() 不会被执行 永远处于等待状态")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("         */")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[i("br")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("        // 当成功或者失败的时候p.then才会被执行")])],1),i("div",[t._v("        resolve('成功');  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 成功状态 resolve()可以传参数")])],1),i("div",[t._v("        reject('失败状态');  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 失败状态 reject()可以传参数")])],1),i("div",[t._v("    }, 1000);")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 成功的时候执行")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 成功状态的返回值")])],1),i("div",[t._v("    console.log('Promise默认写法：' + data);")]),i("div",[t._v("}, data => { "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" // 失败的时候执行")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 失败状态的返回值")])],1),i("div",[t._v("    console.log('Promise默认写法：' + data);")]),i("div",[t._v("});")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("2.")]),t._v(" "),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(".then()")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("如果Promise没有执行成功或者失败的函数，那么 .then() 不会被执行 永远处于等待状态")])])])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v(".then() 可以接受一个或者两个函数")])],1)]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("第一个函数接受Promise成功状态的返回值并且对它进行处理")])],1)]),i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("第二个函数接受Promise失败状态的返回值并且对它进行处理")])])])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('成功');")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 成功的时候执行")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 成功状态的返回值")])],1),i("div",[t._v("    console.log(data)")]),i("div",[t._v("})")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('成功');")]),i("div",[t._v("    reject('失败');")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 成功的时候执行")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 成功状态的返回值")])],1),i("div",[t._v("    console.log(data)")]),i("div",[t._v("}, data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 失败的时候执行")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 失败状态的返回值")])],1),i("div",[t._v("    console.log(data)")]),i("div",[t._v("})")])]),i("div",[i("br")]),i("ul",[i("li",[i("div",[t._v(".then() 支持链式操作")])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[t._v("使用情况一：第一个 .then() 返回的是 Promise对象，那么 第二 .then() 接收的值就是该 Promise对象 成功状态或者失败状态返回的值")])])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p1 = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('p1的成功');")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("let p2 = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('p2的成功');")]),i("div",[t._v("    reject('p2的失败')")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p1.then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 等待 p1 Promise 成功状态返回的值")])],1),i("div",[t._v("    console.log(data);")]),i("div",[t._v("    return p2")]),i("div",[t._v("}).then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 等待第一个 then 返回的 p2 Promise 成功状态返回的值")])],1),i("div",[t._v("    console.log(data)")]),i("div",[t._v("}, data => { "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" // data 等待第一个 then 返回的 p2 Promise 失败状态返回的值")])],1),i("div",[t._v("    console.log(data)")]),i("div",[t._v("})")])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[t._v("使用情况二：第一个 .then() 返回的不是 Promise对象，而是普通类型的值，那么 第二 .then() 接收得值就是该普通类型的值")])])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('成功');")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 等待 p1 Promise 成功状态返回的值")])],1),i("div",[t._v("    console.log(data);  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 成功")])],1),i("div",[t._v("    return '普通状态的值'")]),i("div",[t._v("}).then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 直接接收第一个 then 返回的普通状态的值")])],1),i("div",[t._v("    console.log(data);  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// '普通状态的值'")])],1),i("div",[t._v("})")])]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("3.")]),t._v(" "),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(".catch()")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("捕获失败状态的返回值")])],1)])]),i("div",[i("br")]),i("ul",[i("li",[i("div",[t._v("可以通过 .catch() 代替在 .then() 中传递第二个函数来捕获失败状态的返回值 ")])])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p = new Promise((resolve, reject) => {")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("// resolve('成功');")])],1),i("div",[t._v("    reject('失败')")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {")]),i("div",[t._v("    console.log(data)")]),i("div",[t._v("}).catch(msg => {")]),i("div",[t._v("    console.log(msg)")]),i("div",[t._v("})")])]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("4.")]),t._v(" "),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(".")]),i("span",{staticStyle:{"font-size":"14pt"}},[i("b",[t._v("finally")])]),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("()")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("无论Promise的状态是成功还是失败都会执行 .finally()")])],1)])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p = new Promise((resolve, reject) => {")]),i("div",[t._v("    resolve('成功');")]),i("div",[t._v("    reject('失败')")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("p.then(data => {")]),i("div",[t._v("    console.log(data)")]),i("div",[t._v("}).catch(msg => {")]),i("div",[t._v("    console.log(msg)")]),i("div",[t._v("}).finally(() => {")]),i("div",[t._v("    console.log('无论Promise的状态是成功还是失败都会执行该方法')")]),i("div",[t._v("})")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("5.")]),t._v(" "),i("b",[i("font",{staticStyle:{"font-size":"14pt"}},[t._v("当有多个函数要等待执行的写法（异步操作函数嵌套函数）")])],1)]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i("br")])]),i("ul",[i("li",[i("div",[t._v("不使用 Promise")])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("timer(1);")]),i("div",[i("br")]),i("div",[t._v("function timer(data) {")]),i("div",[t._v("    setTimeout(() => {")]),i("div",[t._v("        console.log('不使用Promise：' + data);")]),i("div",[t._v("        timer2(data + 1); "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 回调函数")])],1),i("div",[t._v("    }, 1000)")]),i("div",[t._v("}")]),i("div",[i("br")]),i("div",[t._v("function timer2(data) {")]),i("div",[t._v("    setTimeout(() => {")]),i("div",[t._v("        console.log('不使用Promise：' + data);")]),i("div",[t._v("    }, 1000)")]),i("div",[t._v("}")])]),i("div",[i("br")]),i("ul",[i("li",[i("div",[t._v("使用 Promise")])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p2 = function (data) {")]),i("div",[t._v("    return new Promise((resolve, reject) => {")]),i("div",[t._v("        setTimeout(() => {")]),i("div",[t._v("            resolve(data);")]),i("div",[t._v("        }, 1000)")]),i("div",[t._v("    })")]),i("div",[t._v("};")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("/*")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    .then 是 Promise的一个方法;")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    如果有两个以上的then的时候：")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("        情况一：第一个 then 返回的是 Promise对象 那么 第二 then 接收得值是 Promise对象 成功状态返回的值")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("        情况二：第一个 then 返回的不是 Promise对象 而是普通类型的值 那么 第二 then 接收得值就是该普通类型的值")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("*/")])],1),i("div",[i("br")]),i("div",[t._v("p2(1).then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data参数是接受成功或者失败状态传过来的值;")])],1),i("div",[t._v("    console.log('使用Promise处理异步回调：' + data);")]),i("div",[t._v("    return p2(data + 1);")]),i("div",[t._v("}).then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 等待第一个 then 返回的 p2 Promise 成功状态返回的值")])],1),i("div",[t._v("    console.log('使用Promise处理异步回调：' + data);")]),i("div",[t._v("    return data + 1;")]),i("div",[t._v("}).then(data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// data 直接接收第二个 then 返回的普通状态的值")])],1),i("div",[t._v("    console.log(data);")]),i("div",[t._v("})")])]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("6.")]),t._v(" "),i("span",{staticStyle:{"font-weight":"bold","font-size":"14pt"}},[t._v("Promise.all")])]),i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("br")])],1),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("语法：Promise.all([Promise对象1, Promise对象2]).then();")])],1)])]),i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("br")])],1),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("说明：")])],1)]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("只有当所有Promise对象执行完,")]),t._v(" "),i("span",{staticStyle:{"font-size":"12pt"}},[t._v("Promise")]),i("font",{staticStyle:{"font-size":"12pt"}},[t._v("对象都为成功或者失败状态的时候then才会执行，如果有一个没有状态then都不会执行")])],1)]),i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("所有Promise会同时执行")])],1)]),i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("如果其中有一个Promise对象是失败状态那么.then()会执行失败状态的代码")])],1)]),i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[t._v("如果Promise对象的成功状态都有值返回出去的话,就会以数组的形式返回出去给.then()接收")])],1)])])]),i("div",[i("span",{staticStyle:{"font-weight":"bold","font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("let p1 = new Promise((resolve, reject) => {")]),i("div",[t._v("    setTimeout(() => {")]),i("div",[t._v("        console.log(1);")]),i("div",[t._v("        resolve('成功1');")]),i("div",[t._v("    }, 1000)")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("let p2 = new Promise((resolve, reject) => {")]),i("div",[t._v("    setTimeout(() => {")]),i("div",[t._v("        console.log(2);")]),i("div",[t._v("        resolve('成功2');")]),i("div",[t._v("    }, 2000)")]),i("div",[t._v("});")]),i("div",[i("br")]),i("div",[t._v("Promise.all([p1, p2]).then(data => { "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" // 成功状态")])],1),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("    // data 存储着所有成功状态返回的值")])],1),i("div",[t._v("    console.log(data);  "),i("font",{attrs:{color:"#41AD1C"}},[t._v('// ["成功1", "成功2"]')])],1),i("div",[t._v("}, data => {  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("// 失败状态")])],1),i("div",[t._v("    console.log('失败');")]),i("div",[t._v("});")])]),i("div",[i("br")]),i("div",[i("br")])])])])])}),[],!1,null,null,null);o.default=v.exports}}]);