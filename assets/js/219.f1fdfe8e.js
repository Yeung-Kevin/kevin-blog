(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{572:function(r,t,e){"use strict";e.r(t);var o=e(25),i=Object(o.a)({},(function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("div",[e("span",[e("div",[e("div",[e("div",[e("div",[e("div",[e("div",[e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"line-height":"1.75"}},[r._v("re模块 -> 用于操作正则表达式")])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[r._v("1. 常用的re模块方法")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt",color:"rgb(255, 0, 0)"}},[r._v("r -> 如果在正则前面或待匹配的字符串加上 r 就是防止字符串被转义（例如正则里面刚好有个 \\\\n 是要匹配 '\\\\n' 字符串的 ")]),e("span",{staticStyle:{"font-size":"12pt",color:"rgb(255, 0, 0)"}},[r._v("此时 Python 就会将正则中 \\\\n 转义，那么在正则前面加上 r 就不会被转义了），所以最好在正则表达式前面都加上 r 以免会匹配错误，除非正则表达式里没有 \\ 的特殊字符")])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("re.findall('正则表达式', '待匹配的字符串', flags) -> 返回值: 列表 -> flags 可以不传")])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.findall('a', 'eva egon yuan') ")]),e("div",[e("br")]),e("div",[r._v("print(ret) "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['a', 'a']")])],1)]),e("div",[e("br")])]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("re.")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v("search(")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '待匹配的字符串'")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v(") -> 返回值: 对象")]),r._v(" "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")]),r._v(" "),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v("->")]),r._v(" "),e("font",{staticStyle:{"font-size":"12pt"}},[e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("函数会在字符串内查找模式匹配,只到找到第一个匹配然后返回一个包含匹配信息的对象,该对象可以")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("通过调用 .group() 方法得到匹配的字符串,如果字符串没有匹配，则返回None")])])],1)])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.search('a', 'eva egon yuan')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# <_sre.SRE_Match object; span=(2, 3), match='a'>")])],1),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    r = ret.group() "),e("font",{attrs:{color:"#41AD1C"}},[r._v(" # a")])],1),e("div",[r._v("    print(r)")]),e("div",[r._v("else:")]),e("div",[r._v("    print('匹配不到')")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.match("),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '待匹配的字符串'")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),r._v(") "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")]),r._v(" -> 匹配的是以xxx开头的字符串，若不是开头的，尽管属于str内，则无法匹配 -> 和 search 一样只会找到第一个匹配到得值然后返回一个对象，通过 "),e("span",{staticStyle:{"font-size":"12pt","white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v(".group() 获取结果")])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.match('e', 'eva egon yuan')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# <_sre.SRE_Match object; span=(0, 1), match='e'>")])],1),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    r = ret.group()  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# e")])],1),e("div",[r._v("    print(r)")]),e("div",[r._v("else:")]),e("div",[r._v("    print('匹配不到')")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.split("),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '待匹配的字符串'")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),r._v(") "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")]),r._v(" -> 以匹配到的结果为分割线，将字符串分割成数组")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.split('\\W+', 'hello,world')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 匹配到的结果是 , 以 , 为分割线将字符串分割成数组")])],1),e("div",[e("br")]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['hello', 'world']")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.sub("),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '需要替换的内容', '")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("待匹配的字符串")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("' , 替换的次数默认不传全部替换")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),r._v(") "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")]),r._v(" -> 将匹配到的内容替换成指定的字符串 -> 返回值: 替换完的字符串")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret1 = re.sub('\\d', '被替换了', 'eva3egon4yuan4')")]),e("div",[e("br")]),e("div",[r._v("print(ret1)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# eva被替换了egon被替换了yuan被替换了")])],1),e("div",[e("br")]),e("div",[r._v("ret2 = re.sub('\\d', '被替换了', 'eva3egon4yuan4', 1)")]),e("div",[e("br")]),e("div",[r._v("print(ret2)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# eva被替换了egon4yuan4")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.subn("),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '需要替换的内容', '")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("待匹配的字符串")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("' , 替换的次数默认不传全部替换")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),r._v(") "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")]),r._v(" -> 将匹配到的内容替换成指定的字符串 -> 返回值: 元组 ('替换完的字符串',替换次数)")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.subn('\\d', '被替换了', 'eva3egon4yuan4')")]),e("div",[e("br")]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ('eva被替换了egon被替换了yuan被替换了', 3)")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("re.")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v("finditer(")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("'正则表达式', '待匹配的字符串'")]),e("span",{staticStyle:{"font-size":"12pt"}},[r._v(", flags")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v(") -> 返回值:")]),r._v(" "),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt","font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("一个存放匹配结果的迭代器")]),r._v(" "),e("span",{staticStyle:{"font-size":"12pt"}},[r._v("-> flags 可以不传")])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.finditer('\\d', 'ds3sy4784a')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# <callable_iterator object at 0x0000025A9B978B70>")])],1),e("div",[e("br")]),e("div",[r._v("print(next(ret).group())  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 3")])],1),e("div",[r._v("print(next(ret).group())  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 4")])],1),e("div",[r._v("print(next(ret).group()) "),e("font",{attrs:{color:"#41AD1C"}},[r._v(" # 7")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.compile('正则表达式') -> 将正则表达式编译成一个正则表达式对象 -> 使用情况: 当一个正则表达式被重复使用的时候")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ro = re.compile('\\d{3}')")]),e("div",[r._v("ret = ro.search('abc123efg')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# <_sre.SRE_Match object; span=(3, 6), match='123'>")])],1),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    r = ret.group()")]),e("div",[r._v("    print(r)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 123")])],1),e("div",[r._v("else:")]),e("div",[r._v("    print('匹配不到')")])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ro = re.compile('\\d')")]),e("div",[r._v("ret = ro.finditer('ds3sy4784a')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# <callable_iterator object at 0x0000025A9B978B70>")])],1),e("div",[e("br")]),e("div",[r._v("print(next(ret).group())  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 3")])],1),e("div",[r._v("print(next(ret).group()) "),e("font",{attrs:{color:"#41AD1C"}},[r._v(" # 4")])],1),e("div",[r._v("print(next(ret).group())  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 7")])],1)]),e("div",[e("br")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt",color:"rgb(255, 0, 0)","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[r._v("2. 优先级查询问题")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.search() 的优先级查询 -> 如果正则中有分组()，那么只需要在 .group(第几个分组) 传入第几个分组就可以获得该分组匹配到的内容")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("ret = re.search('^[1-9](\\d{14})(\\d{2}[0-9x])?$', '440981199703208810')")]),e("div",[e("br")]),e("div",[r._v("r = ret.group() "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 440981199703208810")])],1),e("div",[r._v("r2 = ret.group(1) "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 40981199703208")])],1),e("div",[r._v("r3 = ret.group(2) "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 810")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.findall() 的优先级查询 -> "),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("findall会优先把分组")])]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("匹配到的")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("内容返回，如果想要匹配结果，取消权限即可 -> 取消权限: 在分组的第一个 ( 后面加上 ?:")])])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v("ret = re.findall(r'www\\.(baidu|oldboy)\\.com', 'www.oldboy.com')")]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['oldboy']")])],1),e("div",[e("br")]),e("div",[r._v("ret = re.findall(r'www\\.(?:baidu|oldboy)\\.com', 'www.oldboy.com')")]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['www.oldboy.com']")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.split() 的优先级查询 -> 没有加分组()不会保留所匹配到的内容而是作为分割线消失了，但是加了分组()就能够保留匹配到的内容，"),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[r._v("这个在某些需要保留匹配部分的使用过程是非常重要的。")])])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v('ret = re.split("\\d+", "eva3egon4yuan")')]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['eva', 'egon', 'yuan']")])],1),e("div",[e("br")]),e("div",[r._v('ret = re.split("(\\d+)", "eva3egon4yuan")')]),e("div",[r._v("print(ret)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['eva', '3', 'egon', '4', 'yuan']")])],1)]),e("div",[e("br")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt",color:"rgb(255, 0, 0)","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[r._v("3. 给分组()命名")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("在优先级查询问题中我们可以看到如果正则有分组会优先取分组中的内容返回，此时我们可以通过给分组起名直接获取分组中匹配到的内容，而不需要通过下标 ")])])])]),e("div",[e("font",{staticStyle:{"font-size":"12pt"}},[e("br")])],1),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("匹配到的结果通过 .group('name') 拿到对应的值")])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("自由返回值是对象并且对象中有.group()方法的re模块方法，才能通过分组的名字直接获取到对象的分组所匹配到的内容")])])]),e("div",[e("br")]),e("ul",[e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("re.")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v("search()")])])]),e("li",[e("div",[r._v("re.match()")])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("re.")]),e("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[r._v("finditer()")])])])])]),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("br")])],1),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("匹配标签名")])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("ret = re.search('<(?P<tag_name>\\w+)>\\w+</(?P=tag_name)>', '<h1>hello</h1>') "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ?P=tag_name 表示使用名字为 tag_name 分组的匹配内容 ->  (?P=tag_name) 的匹配内容要和 (?P<tag_name>\\w+) 的匹配内容要完全一致")])],1),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    r_tag_name = ret.group('tag_name')  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 匹配结果 h1")])],1)]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("ret = re.search(r'<(\\w+)>\\w+</\\1>', '<h1>hello</h1>') "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# \\1 表示使用第一个分组的匹配内容，但是要在正则表达式前面加上 r 将他转为原生字符串")])],1),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    r_tag_name = ret.group(1)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 匹配结果 h1")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[r._v("匹配标签名和标签内容")])])])]),e("div",[e("br")])]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("ret_str = '''<h1>")]),e("div",[r._v("    content1")]),e("div",[r._v("</h1>")]),e("div",[r._v("<h2>")]),e("div",[r._v("    content2")]),e("div",[r._v("</h2>")]),e("div",[r._v("'''")]),e("div",[e("br")]),e("div",[r._v("ret = re.finditer('<(?P<tag_name>.*?)>(?P<tag_content>.*?)</(?P=tag_name)>', ret_str, re.S)")]),e("div",[e("br")]),e("div",[r._v("if ret:")]),e("div",[r._v("    for r in ret:")]),e("div",[r._v("        print(r.group('tag_name'))  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# h1 h2")])],1),e("div",[r._v("        print(r.group('tag_content').strip()) "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# content1 content2")])],1)]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[r._v("4. flags 参数")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[r._v("re.S")]),r._v(" -> . 可以匹配任意字符，包括换行符 -> 最常用的")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v('string = """朝辞白帝彩云间')]),e("div",[r._v("千里江陵一日还")]),e("div",[r._v("两岸猿声啼不住")]),e("div",[r._v("轻舟已过万重山")]),e("div",[r._v('"""')]),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[r._v("# 使用 re.S")])],1),e("div",[r._v("ret1 = re.findall('.*', string, re.S)")]),e("div",[r._v("print(ret1)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['朝辞白帝彩云间\\n千里江陵一日还\\n两岸猿声啼不住\\n轻舟已过万重山\\n', '']")])],1),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[r._v("# 不使用 re.S")])],1),e("div",[r._v("ret2 = re.findall('.*', string)")]),e("div",[r._v("print(ret2)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['朝辞白帝彩云间', '', '千里江陵一日还', '', '两岸猿声啼不住', '', '轻舟已过万重山', '', '']")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.M -> 多行模式，改变^和$的行为（即: ^和$可以作用于每一行）")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[r._v('string = """fall in love with you')]),e("div",[r._v("i love you very much")]),e("div",[r._v("i love she")]),e("div",[r._v("i love her")]),e("div",[r._v('"""')]),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[r._v("# 使用 re.M")])],1),e("div",[r._v("ret1 = re.findall('^i.*', string, re.M)")]),e("div",[r._v("print(ret1)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# ['i love you very much', 'i love she', 'i love her']")])],1),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[r._v("# 不使用 re.M")])],1),e("div",[r._v("ret2 = re.findall('^i.*', string)")]),e("div",[r._v("print(ret2)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# []")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.I -> 忽略大小写，括号内是完整的写法")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.L -> 做本地化识别的匹配，表示特殊字符集 \\w, \\W, \\b, \\B, \\s, \\S 依赖于当前环境，不推荐使用")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.U -> 使用\\w \\W \\s \\S \\d \\D使用取决于unicode定义的字符属性。在python3中默认使用该flag")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[r._v("re.X -> 冗长模式，该模式下pattern字符串可以是多行的，忽略空白字符，并可以添加注释")])])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt"}},[e("br")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[r._v("5. 爬虫例子")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt"}},[e("br")])]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import json")]),e("div",[r._v("import re")]),e("div",[r._v("import zlib")]),e("div",[r._v("from urllib.request import urlopen")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def getPage(url):")]),e("div",[r._v("    response = urlopen(url).read()")]),e("div",[r._v("    response = zlib.decompress(response, 16 + zlib.MAX_WBITS)  "),e("font",{attrs:{color:"#41AD1C"}},[r._v("# 解压网页")])],1),e("div",[r._v("    return response.decode('utf-8', 'ignore')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def getData(html):")]),e("div",[r._v('    html_data = re.compile(r\'<div class="good-info".*?>.*?<div class="good-detail-text.*?<a .*?>(?P<title>.*?)</a>.*?<a .*?>(?P<sm_title>.*?)</a>.*?<span class="sale-price prime-cost">(?P<price>.*?)</span>\', re.S)')]),e("div",[r._v("    ret = html_data.finditer(html)")]),e("div",[r._v("    for r in ret:")]),e("div",[r._v("        yield {")]),e("div",[r._v("            'title': r.group('title'),")]),e("div",[r._v("            'sm_title': r.group('sm_title'),")]),e("div",[r._v("            'price': r.group('price').strip(),")]),e("div",[r._v("        }")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def main(page):")]),e("div",[r._v("    url = 'https://www.yohobuy.com/list/gd1.html?category_id=5,8&page=%s' % page")]),e("div",[r._v("    html = getPage(url)")]),e("div",[r._v("    data = getData(html)")]),e("div",[r._v("    with open('yoho.txt', 'a', encoding='utf-8') as f:")]),e("div",[r._v("        for d in data:")]),e("div",[r._v("            print(d)")]),e("div",[r._v("            f.write(json.dumps(d, ensure_ascii=False) + '\\n')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("for i in range(10):")]),e("div",[r._v("    main(i + 1)")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt"}},[e("br")])]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-weight":"bold","line-height":"1.75"}},[r._v("6.")]),r._v(" "),e("span",{staticStyle:{"font-size":"18.6667px","white-space":"pre-wrap","font-weight":"bold"}},[r._v("计算器")])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[r._v("import re")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def dealwith(express):")]),e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("# 对表达式中的符号进行处理 +- 替换成 - ，-- 替换成 +")])]),e("div",[r._v("    express = express.replace('+-', '-')")]),e("div",[r._v("    express = express.replace('--', '+')")]),e("div",[r._v("    return express")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def cal_exp_son(exp_son):")]),e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("# 用来计算原子型的表达式 两个数之间的乘除法")])]),e("div",[r._v("    if '/' in exp_son:")]),e("div",[r._v("        a, b = exp_son.split('/')")]),e("div",[r._v("        return str(float(a) / float(b))")]),e("div",[r._v("    else:")]),e("div",[r._v("        a, b = exp_son.split('*')")]),e("div",[r._v("        return str(float(a) * float(b))")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def cal_express_no_breacket(exp):")]),e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v(" # 计算没有括号的表达式")])]),e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("    # exp是没有经过处理的最内层带括号的表达式")])]),e("div",[r._v("    exp = exp.strip('()')")]),e("div",[r._v("    while True:")]),e("div",[r._v("        ret = re.search(r'\\d+\\.?\\d*[*/]-?\\d+\\.?\\d*', exp)  "),e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("# 匹配第一个乘除")])]),e("div",[r._v("        if ret:  "),e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("# 判断表达式中是否还有乘除")])]),e("div",[r._v("            exp_son = ret.group()")]),e("div",[r._v("            print(exp_son)")]),e("div",[r._v("            ret = cal_exp_son(exp_son)")]),e("div",[r._v("            exp = exp.replace(exp_son, ret)")]),e("div",[r._v("            exp = dealwith(exp)")]),e("div",[r._v("        else:")]),e("div",[r._v("            ret = re.findall(r'-?\\d+\\.?\\d*', exp)")]),e("div",[r._v("            sum = 0")]),e("div",[r._v("            for i in ret:")]),e("div",[r._v("                sum += float(i)")]),e("div",[r._v("            return str(sum)")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("def remove_bracket(new_express):")]),e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[r._v("# 提取括号里面没有其他括号的表达式")])]),e("div",[r._v("    while True:")]),e("div",[r._v("        ret = re.search(r'\\([^()]+\\)', new_express)")]),e("div",[r._v("        if ret:")]),e("div",[r._v("            express_no_breacket = ret.group()")]),e("div",[r._v("            print('匹配到内部不再有括号的值：', express_no_breacket)")]),e("div",[r._v("            ret = cal_express_no_breacket(express_no_breacket)")]),e("div",[r._v("            print(new_express, express_no_breacket, ret)")]),e("div",[r._v("            new_express = new_express.replace(express_no_breacket, ret)")]),e("div",[r._v("            new_express = dealwith(new_express)")]),e("div",[r._v("            print(new_express)")]),e("div",[r._v("        else:")]),e("div",[r._v("            print('表达式中没有括号了:', new_express)")]),e("div",[r._v("            ret = cal_express_no_breacket(new_express)")]),e("div",[r._v("            print(ret)")]),e("div",[r._v("            break")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[r._v("express = '1 - 2 * ( ( 6 0 -3 0  +(-40/5) * (9-2*5/3 + 7 /3*99/4*2998 +10 * 568/14 )) - (-4*3)/ (16-3*2) )'")]),e("div",[r._v("new_express = express.replace(' ', '')")]),e("div",[r._v("remove_bracket(new_express)")])])]),e("div",[e("br")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);