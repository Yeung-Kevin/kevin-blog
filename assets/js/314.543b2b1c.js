(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{669:function(t,i,e){"use strict";e.r(i);var o=e(25),r=Object(o.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",[e("span",[e("div",[e("div",[e("div",[e("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","font-weight":"bold","line-height":"1.5","background-color":"#3eaf7c","border-radius":"3px","text-align":"center",color:"white","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-ligatures":"normal","font-variant-caps":"normal","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"21px","font-weight":"bold","line-height":"1.5","background-color":"#3eaf7c","border-radius":"3px",color:"white","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-ligatures":"normal","font-variant-caps":"normal","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[t._v("继承的介绍")])]),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[e("br")])])],1),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("继承的作用: 减少代码的重复")])])],1),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])])],1),e("div",[e("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("抽象: ")]),e("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"14pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("抽象即抽取类似或者说比较像的部分。")])])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("父类 也称之为 基类 超类")])]),e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("子类 ")]),e("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("也称之为 派生类")])]),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])])],1),e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[e("span",{staticStyle:{"font-size":"12pt",color:"rgb(255, 0, 0)"}},[t._v("class 类名(所要继承的类名)")])])]),e("div",[e("font",{staticStyle:{"font-size":"12pt"}},[e("br")])],1),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("经典类: 不传")]),e("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("所要继承的类名")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("新式类: 传入 object 即 class a(object)")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("在 python 2.7 中 经典类和新式类共存且如果要创建新式类就要传入object")])])]),e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("在 python 3+ 中 只有新式类 所以在 py3+ 中 object 是不用传的 且 class a 等价于 class a(object) ")])])])]),e("div",[e("font",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])])],1),e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[e("span",{staticStyle:{"font-size":"12pt",color:"rgb(255, 0, 0)"}},[t._v("调用类的属性或方法的顺序: 先从子类找，找不到再到父类")])])]),e("div",[e("br")]),e("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("单继承")])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("1.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("单继承的写法")])]),e("div",[e("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("br")])]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self, data):")]),e("div",[t._v("        print('父级方法', data)")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    pass")]),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18)")]),e("div",[e("br")]),e("div",[t._v("print(child.name)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 'Kevin'")])],1),e("div",[t._v("child.fn('参数')")])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("2.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("调用父类的方法")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("父类名.方法名(self, 参数1, 参数2)")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def c_fn(self):")]),e("div",[e("font",{attrs:{color:"#FA7A00"}},[t._v("Father.fn(self)")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 调用父级方法")])],1),e("div",[e("br")]),e("div",[t._v("c = Child('Kevin', 18)")]),e("div",[t._v("c.c_fn()")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("super().方法名(参数1, 参数2) -> super 不传参写法")])])]),e("div",[e("br")]),e("ul",[e("ul",[e("li",[e("div",[t._v("super() 表示父类")])]),e("li",[e("div",[e("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("注意: super 传参和不传参的效果都是一样的，只是写法不同")])])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[e("br")]),e("div",[t._v("    def c_fn(self):")]),e("div",[e("font",{attrs:{color:"#FA7A00"}},[t._v("super().fn()")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 调用父级方法")])],1),e("div",[e("br")]),e("div",[t._v("c = Child('Kevin', 18)")]),e("div",[t._v("c.c_fn()")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("super(自身类, 对象/self) -> super 传参写法")])])]),e("div",[e("br")]),e("ul",[e("ul",[e("li",[e("div",[t._v("super() 表示父类")])]),e("li",[e("div",[t._v("只有 python 3+ 中有写法")])]),e("li",[e("div",[e("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("注意: super 传参和不传参的效果都是一样的，只是写法不同")])])])])]),e("div",[e("br")]),e("ul",[e("ul",[e("li",[e("div",[t._v("在类方法中使用")])])])]),e("div",[e("br")]),e("ul",[e("ul",[e("ul",[e("li",[e("div",[t._v("写法一")])])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[e("br")]),e("div",[t._v("    def c_fn(self):")]),e("div",[e("font",{attrs:{color:"#FA7A00"}},[t._v("super(Child, self).fn()")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 调用父级方法")])],1),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("c = Child('Kevin', 18)")]),e("div",[t._v("c.c_fn()")])]),e("div",[e("br")]),e("ul",[e("ul",[e("ul",[e("li",[e("div",[t._v("写法二")])])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[e("br")]),e("div",[t._v("    def c_fn(self):")]),e("div",[e("font",{attrs:{color:"#FA7A00"}},[t._v("super(self.__class__, self).fn() ")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 调用父级方法， self.__class__ -> 获取该对象所在的类")])],1),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("c = Child('Kevin', 18)")]),e("div",[t._v("c.c_fn()")])]),e("div",[e("br")]),e("ul",[e("ul",[e("li",[e("div",[t._v("在类外部使用")])])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 外类的外部使用 super() 需要传 类名 和 对象")])]),e("div",[e("br")]),e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('子级方法')")]),e("div",[e("br")]),e("div",[e("br")]),e("div",[t._v("c = Child('Kevin', 18)")]),e("div",[e("font",{attrs:{color:"#FA7A00"}},[t._v("super(Child, c).fn()")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v(" # 父级方法")])],1)]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("3.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("super()的执行顺序")])]),e("div",[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("super() 不是直接执行父类方法，而是")]),e("span",{staticStyle:{"font-size":"12pt",color:"rgb(227, 0, 0)"}},[t._v("根据被序列化的类的 __mro__ 类的继承顺序来")]),e("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("执行对应的方法")])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("super() 是根据__mro__类的继承顺序执行方法")])])])]),e("div",[e("span",{staticStyle:{"font-size":"14pt"}},[e("br")])]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("class Father:")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("    def fn(self):")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("font",{attrs:{color:"#FA7A00"}},[t._v("super().fn()")]),t._v(" "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# Child.fn -> 根据 __mro__ 类的继承顺序执行，先去Child类找有没有fn方法，如果没有再去object类里面找，如果还没有就报错")])],1)],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("font",{attrs:{color:"#41AD1C"}},[t._v('"""')])],1)],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#41AD1C"}},[t._v("            为什么要直接从Child类开始找？")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#41AD1C"}},[t._v("            因为super方法在Father类中执行，且在 __mro__ 类的继承顺序中，Child类是Father的下一个类，所以要从Child类开始找起")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#41AD1C"}},[t._v('        """')])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("        print('Father.fn')")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("class Child:")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("    def fn(self):")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("        print('Child.fn')")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("class Foo(Father, Child):")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("    pass")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#E30000"}},[t._v("# 不会报错: 因为在Child类中可以找到fn方法")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("br")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("f = Foo()")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("f.fn()")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[t._v("print("),e("font",{attrs:{color:"#FA7A00"}},[t._v("Foo.__mro__")]),t._v(")  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# (<class '__main__.Foo'>, <class '__main__.Father'>, <class '__main__.Child'>, <class 'object'>)")])],1)],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("font",{attrs:{color:"#41AD1C"}},[e("br")])],1)],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#FA7A00"}},[t._v("# ---------------------------------------------------")])],1),e("div",[e("font",{staticStyle:{"font-size":"9pt"}},[e("font",{attrs:{color:"#41AD1C"}},[e("br")])],1)],1),e("div",[e("font",{attrs:{color:"#FF0000"}},[t._v("# 报错: 因为object类中没有fn方法")])],1),e("div",[e("font",{attrs:{color:"#FF0000"}},[e("br")])],1),e("div",[t._v("f = Father()")]),e("div",[t._v("f.fn()")]),e("div",[t._v("print(Father.__mro__)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# (<class '__main__.Father'>, <class 'object'>)")])],1)]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("4.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt"}},[e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("派生属性")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("父类中没有的属性且子类有的属性")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("font",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("# 定义派生属性且保留从父类所继承下来的属性的方法一 -> 在子类的 __init__() 方法中调用 父类的 __init__() 方法 self 必须传")])],1),e("div",[e("br")]),e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self, data):")]),e("div",[t._v("        print('父级方法', data)")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def __init__(self, name, age, sex):")]),e("div",[t._v("        Father.__init__(self, name, age) "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 保留从父类所继承下来的属性，self 必须传")])],1),e("div",[t._v("        self.sex = sex  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 派生属性")])],1),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18, '男')")]),e("div",[e("br")]),e("div",[t._v("print(child.name)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 'Kevin'")])],1),e("div",[t._v("print(child.sex) "),e("font",{attrs:{color:"#41AD1C"}},[t._v(" # '男'")])],1)]),e("div",[e("br")])]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("font",{attrs:{color:"#FF0000"}},[t._v("# 定义派生属性且保留从父类所继承下来的属性的方法二 -> 在子类的 __init__() 方法中调用 super().__init__() 方法 self 不用传 super 方法已经帮你传入， super 表示的就是父类的意思 -> "),e("b",[t._v("推荐使用")])])],1),e("div",[e("br")]),e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self, data):")]),e("div",[t._v("        print('父级方法', data)")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def __init__(self, name, age, sex):")]),e("div",[t._v("        super().__init__(name, age)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 保留从父类所继承下来的属性，super 表示父类的意思，self 不用传 super 方法已经帮你传入")])],1),e("div",[t._v("        self.sex = sex  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 派生属性")])],1),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18, '男')")]),e("div",[e("br")]),e("div",[t._v("print(child.name)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 'Kevin'")])],1),e("div",[t._v("print(child.sex)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# '男'")])],1)]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("5.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("派生方法")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("父类中没有的方法且子类有的方法")])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("如果子类的方法名和父类的方法名重名默认调用父类的方法")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self, data):")]),e("div",[t._v("        print('父级方法', data)")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def __init__(self, name, age, sex):")]),e("div",[t._v("        super().__init__(name, age)")]),e("div",[t._v("        self.sex = sex")]),e("div",[e("br")]),e("div",[t._v("    def c_fn(self):  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 派生方法")])],1),e("div",[t._v("        print('派生方法')")]),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18, '男')")]),e("div",[e("br")]),e("div",[t._v("child.c_fn()")])]),e("div",[e("br")])]),e("ul",[e("li",[e("div",[t._v("如果子类的方法名和父类的方法名重名且在调用子类的方法的时候保留父类同名方法的功能")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("# 方法一： 父类名.方法名(self, 参数一， 参数二)")])],1),e("div",[e("br")]),e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def __init__(self, name, age, sex):")]),e("div",[t._v("        super().__init__(name, age)")]),e("div",[t._v("        self.sex = sex")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        Father.fn(self)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 保留父类同名方法的功能")])],1),e("div",[t._v("        print('保留了父类同名方法的功能')")]),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18, '男')")]),e("div",[e("br")]),e("div",[t._v("child.fn()")])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("# 方法二: super().父级方法名(参数一， 参数二) -> 不用传 self -> 推荐使用")])],1),e("div",[e("br")]),e("div",[t._v("class Father:")]),e("div",[t._v("    def __init__(self, name, age):")]),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.age = age")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        print('父级方法')")]),e("div",[e("br")]),e("div",[t._v("class Child(Father):")]),e("div",[t._v("    def __init__(self, name, age, sex):")]),e("div",[t._v("        super().__init__(name, age)")]),e("div",[t._v("        self.sex = sex")]),e("div",[e("br")]),e("div",[t._v("    def fn(self):")]),e("div",[t._v("        super().fn()  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 保留父类同名方法的功能")])],1),e("div",[t._v("        print('保留了父类同名方法的功能')")]),e("div",[e("br")]),e("div",[t._v("child = Child('Kevin', 18, '男')")]),e("div",[e("br")]),e("div",[t._v("child.fn()")])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("6.")]),t._v(" "),e("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("人狗大战通过继承简化代码")])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class Public:")]),e("div",[t._v("    def __init__(self, name, blood, aggr):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("'''")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        :param name: 姓名")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        :param blood: 血量")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        :param aggr: 攻击力")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        '''")])],1),e("div",[t._v("        self.name = name")]),e("div",[t._v("        self.blood = blood")]),e("div",[t._v("        self.aggr = aggr")]),e("div",[e("br")]),e("div",[t._v("    def eat(self):")]),e("div",[t._v("        print('吃药了')")]),e("div",[t._v("        self.blood += 100")]),e("div",[e("br")]),e("div",[t._v("class Dog(Public):")]),e("div",[t._v("    def __init__(self, name, blood, aggr, kind):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v(" '''")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        :param kind: 品种")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        '''")])],1),e("div",[t._v("        Public.__init__(self, name, blood, aggr)")]),e("div",[t._v("        self.kind = kind")]),e("div",[e("br")]),e("div",[t._v("    def bite(self):")]),e("div",[t._v("        print('狗咬人')")]),e("div",[e("br")]),e("div",[t._v("class Person(Public):")]),e("div",[t._v("    def __init__(self, name, blood, aggr, sex):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("'''")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        :param sex: 姓名")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("        '''")])],1),e("div",[t._v("        Public.__init__(self, name, blood, aggr)")]),e("div",[t._v("        self.sex = sex")]),e("div",[e("br")]),e("div",[t._v("    def eat(self):")]),e("div",[t._v("        super().eat()")]),e("div",[t._v("        self.blood += 50")]),e("div",[t._v("        print('人吃药而外补多50血')")]),e("div",[e("br")]),e("div",[t._v("    def attack(self):")]),e("div",[t._v("        print('人打狗')")]),e("div",[e("br")]),e("div",[t._v("d = Dog('leopard_brother', 100, 20, 'teddy')")]),e("div",[t._v("p = Person('Kevin', 200, 998, '男')")]),e("div",[e("br")]),e("div",[t._v("print(p.name)")]),e("div",[t._v("d.bite()")]),e("div",[t._v("p.attack()")]),e("div",[t._v("p.eat()")]),e("div",[t._v("print(p.blood)")])]),e("div",[e("br")]),e("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[e("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("多继承")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("只有 python 中有多继承")])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{"font-size":"12pt"}},[t._v("在开发的过程中最好不要使用多继承的方式，除非使用了开发模式")])])])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("钻石继承")])])]),e("div",[e("br")]),e("div",[e("img",{attrs:{"data-filename":"Image.png",src:"/kevin-blog/Python/面向对象-继承_files/Image.png",type:"image/png"}})]),e("div",[e("br")]),e("div",[t._v("python 中如果继承了多个类，那么其寻找方式只有两种，分别是 "),e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("深度优先")]),t._v(" 和 "),e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("广度优先")])]),e("div",[e("br")]),e("ul",[e("li",[e("div",[e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("当类是经典类的时，多继承情况下，会按照深度优先方式查找")])])]),e("li",[e("div",[e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("当类是新式类的时，多继承情况下，会按照广度优先方式查找")])])])]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[e("img",{attrs:{"data-filename":"Image.png",src:"/kevin-blog/Python/面向对象-继承_files/Image [1].png",type:"image/png"}})])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class A(object):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from A')")]),e("div",[e("br")]),e("div",[t._v("class B(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from B')")]),e("div",[e("br")]),e("div",[t._v("class C(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from C')")]),e("div",[e("br")]),e("div",[t._v("class D(B, C):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("# def test(self):")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("    #     print('from D')")])],1),e("div",[t._v("    pass")]),e("div",[e("br")]),e("div",[t._v("f1 = D()")]),e("div",[t._v("f1.test()")]),e("div",[t._v("print(D.__mro__)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 只有新式才有这个属性可以查看线性列表，经典类没有这个属性")])],1),e("div",[e("br")]),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#新式类继承顺序: D -> B -> C -> A")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#经典类继承顺序: D -> B -> A -> C")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[e("br")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#python3中统一都是新式类")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#pyhon2中才分新式类与经典类")])],1)]),e("div",[e("br")]),e("div",[e("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[e("img",{attrs:{"data-filename":"Image.png",src:"/kevin-blog/Python/面向对象-继承_files/Image [2].png",type:"image/png"}})])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class A(object):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from A')")]),e("div",[e("br")]),e("div",[t._v("class B(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from B')")]),e("div",[e("br")]),e("div",[t._v("class C(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from C')")]),e("div",[e("br")]),e("div",[t._v("class D(B):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from D')")]),e("div",[e("br")]),e("div",[t._v("class E(C):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from E')")]),e("div",[e("br")]),e("div",[t._v("class F(D,E):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("# def test(self):")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("    #     print('from F')")])],1),e("div",[t._v("    pass")]),e("div",[e("br")]),e("div",[t._v("f1=F()")]),e("div",[t._v("f1.test()")]),e("div",[t._v("print(F.__mro__)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# 只有新式才有这个属性可以查看线性列表，经典类没有这个属性")])],1),e("div",[e("br")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#新式类继承顺序: F -> D -> B -> E -> C -> A")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#经典类继承顺序: F -> D -> B -> A -> E -> C")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[e("br")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#python3中统一都是新式类")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("#pyhon2中才分新式类与经典类")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v("多继承 super() 执行循序 -> 看回上面的 深度优先 和 广度优先度 就能理解了")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class A(object):")]),e("div",[t._v("    def func(self): print('A')")]),e("div",[e("br")]),e("div",[t._v("class B(A):")]),e("div",[t._v("    def func(self):")]),e("div",[t._v("        super().func()")]),e("div",[t._v("        print('B')")]),e("div",[e("br")]),e("div",[t._v("class C(A):")]),e("div",[t._v("    def func(self):")]),e("div",[t._v("        super().func()")]),e("div",[t._v("        print('C')")]),e("div",[e("br")]),e("div",[t._v("class D(B,C):")]),e("div",[t._v("    def func(self):")]),e("div",[t._v("        super().func()")]),e("div",[t._v("        print('D')")]),e("div",[e("br")]),e("div",[t._v("b = D()")]),e("div",[t._v("b.func() "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# A C B D")])],1)]),e("div",[e("br")]),e("ul",[e("li",[e("div",[t._v(".__mro__ 查看继承顺序 -> 只有新式类才能使用")])])]),e("div",[e("br")]),e("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[e("div",[t._v("class A(object):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from A')")]),e("div",[e("br")]),e("div",[t._v("class B(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from B')")]),e("div",[e("br")]),e("div",[t._v("class C(A):")]),e("div",[t._v("    def test(self):")]),e("div",[t._v("        print('from C')")]),e("div",[e("br")]),e("div",[t._v("class D(B, C):")]),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("# def test(self):")])],1),e("div",[e("font",{attrs:{color:"#41AD1C"}},[t._v("    #     print('from D')")])],1),e("div",[t._v("    pass")]),e("div",[e("br")]),e("div",[t._v("print(D.__mro__)  "),e("font",{attrs:{color:"#41AD1C"}},[t._v("# (<class '__main__.D'>, <class '__main__.B'>, <class '__main__.C'>, <class '__main__.A'>, <class 'object'>)")])],1)]),e("div",[e("br")])]),e("div",[e("br")])])])])}),[],!1,null,null,null);i.default=r.exports}}]);