(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{395:function(i,e,t){"use strict";t.r(e);var r=t(25),o=Object(r.a)({},(function(){var i=this,e=i.$createElement,t=i._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("div",[t("span",[t("div",[t("div",[t("span",{staticStyle:{"font-family":'"Helvetica Neue"'}},[t("br")])]),t("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[t("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[i._v("视图四部曲")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("1.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v(" 混合使用")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# views.py")])],1),t("div",[t("br")]),t("div",[i._v("from django.shortcuts import render, HttpResponse")]),t("div",[i._v("from rest_framework.views import APIView")]),t("div",[i._v("from rest_framework.response import Response")]),t("div",[i._v("from .models import *")]),t("div",[i._v("from .serializer import *")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookView(APIView):")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看所有书籍")])],1),t("div",[i._v("    def get(self, request):")]),t("div",[i._v("        book_list = Book.objects.all()")]),t("div",[i._v("        bs = BookSerializers(book_list, many=True)")]),t("div",[i._v("        return Response(bs.data)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 添加书籍")])],1),t("div",[i._v("    def post(self, request):")]),t("div",[i._v("        bs = BookSerializers(data=request.data)")]),t("div",[i._v("        if bs.is_valid():  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证数据是否有误")])],1),t("div",[i._v("            print(bs.validated_data)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证过后正确的数据: OrderedDict([('title', '三国演义'), ('price', 100), ('pub_date', datetime.date(2012, 12, 12)), ('publish', <Publish: 东莞出版社>), ('authors', [<Author: Kevin>, <Author: Aimer>])])")])],1),t("div",[i._v("            bs.save()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 保存数据，实际上调用的是 rest-framework 中的 create 方法")])],1),t("div",[i._v("            return Response(bs.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response(bs.errors)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# bs.errors 验证过后的错误信息")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookDetailView(APIView):")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看指定的书籍")])],1),t("div",[i._v("    def get(self, request, id):")]),t("div",[i._v("        book_obj = Book.objects.filter(pk=id).first()")]),t("div",[i._v("        if book_obj:")]),t("div",[i._v("            bs = BookSerializers(book_obj)")]),t("div",[i._v("            return Response(bs.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response({'static': 0, 'message': '没有该书籍'})")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改书籍")])],1),t("div",[i._v("    def put(self, request, id):")]),t("div",[i._v("        book_obj = Book.objects.filter(pk=id).first()")]),t("div",[i._v("        bs = BookSerializers(book_obj, data=request.data)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改数据的时候一定要指定修改那条数据（即: book_obj），否则在执行 .save() 的时候就相当于新增数据")])],1),t("div",[i._v("        if bs.is_valid():  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证数据是否有误")])],1),t("div",[i._v("            bs.save()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 保存数据，实际上调用的是 rest-framework 中的 update 方法")])],1),t("div",[i._v("            return Response(bs.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response(bs.errors)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# bs.errors 验证过后的错误信息")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 删除书籍")])],1),t("div",[i._v("    def delete(self, request, id):")]),t("div",[i._v("        Book.objects.filter(pk=id).delete()")]),t("div",[i._v("        return Response()")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishView(APIView):")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看所有出版社")])],1),t("div",[i._v("    def get(self, request):")]),t("div",[i._v("        publish_list = Publish.objects.all()")]),t("div",[i._v("        ps = PublishSerializers(publish_list, many=True)")]),t("div",[i._v("        return Response(ps.data)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 添加出版社")])],1),t("div",[i._v("    def post(self, request):")]),t("div",[i._v("        ps = PublishSerializers(data=request.data)")]),t("div",[i._v("        if ps.is_valid():  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证数据是否有误")])],1),t("div",[i._v("            print(ps.validated_data)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证过后正确的数据: OrderedDict([('name', '台山出版社'), ('email', '123@qq.com')])")])],1),t("div",[i._v("            ps.save()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 保存数据，实际上调用的是 rest-framework 中的 create 方法")])],1),t("div",[i._v("            return Response(ps.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response(ps.errors)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# ps.errors 验证过后的错误信息")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishDetailView(APIView):")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看指定的出版社")])],1),t("div",[i._v("    def get(self, request, id):")]),t("div",[i._v("        publish_obj = Publish.objects.filter(pk=id).first()")]),t("div",[i._v("        if publish_obj:")]),t("div",[i._v("            ps = PublishSerializers(publish_obj)")]),t("div",[i._v("            return Response(ps.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response({'static': 0, 'message': '没有该出版社'})")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改出版社")])],1),t("div",[i._v("    def put(self, request, id):")]),t("div",[i._v("        publish_obj = Publish.objects.filter(pk=id).first()")]),t("div",[i._v("        ps = PublishSerializers(publish_obj, data=request.data)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改数据的时候一定要指定修改那条数据（即: publish_obj），否则在执行 .save() 的时候就相当于新增数据")])],1),t("div",[i._v("        if ps.is_valid():  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 验证数据是否有误")])],1),t("div",[i._v("            ps.save()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 保存数据，实际上调用的是 rest-framework 中的 update 方法")])],1),t("div",[i._v("            return Response(ps.data)")]),t("div",[i._v("        else:")]),t("div",[i._v("            return Response(ps.errors)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# ps.errors 验证过后的错误信息")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 删除出版社")])],1),t("div",[i._v("    def delete(self, request, id):")]),t("div",[i._v("        Publish.objects.filter(pk=id).delete()")]),t("div",[i._v("        return Response()")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# serializer.py")])],1),t("div",[t("br")]),t("div",[i._v("from rest_framework import serializers")]),t("div",[i._v("from .models import *")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishSerializers(serializers.ModelSerializer):")]),t("div",[i._v("    class Meta:")]),t("div",[i._v("        model = Publish")]),t("div",[i._v("        fields = '__all__'")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookSerializers(serializers.ModelSerializer):")]),t("div",[i._v("    class Meta:")]),t("div",[i._v("        model = Book")]),t("div",[i._v("        fields = '__all__'")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# urls.py")])],1),t("div",[t("font",{attrs:{color:"#41AD1C"}},[t("br")])],1),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'^admin/', admin.site.urls),")]),t("div",[t("br")]),t("div",[i._v("    url(r'book/$', BookView.as_view()),")]),t("div",[i._v("    url(r'book/(\\d+)', BookDetailView.as_view()),")]),t("div",[t("br")]),t("div",[i._v("    url(r'publish/$', PublishView.as_view()),")]),t("div",[i._v("    url(r'publish/(\\d+)', PublishDetailView.as_view()),")]),t("div",[i._v("]")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("2.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt"}},[t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("mixin类编写视图")])])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[i._v("在 mixin 模块下提供了5个类，分别对应着 查询所有数据，查看指定数据，添加数据，修改数据，删除数据，其实这5个类就是将混合使用中的处理http请求的方法封装了起来")])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("mixin 模块下的5个类:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("mixins.ListModelMixin -> 查看所有数据")])]),t("ul",[t("li",[t("div",[i._v("mixins.ListModelMixin 下的 "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("list")]),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("()")]),i._v(" 方法: 封装了查看所有数据的代码")])])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("mixins.CreateModelMixin -> 创建数据")])]),t("ul",[t("li",[t("div",[i._v("mixins.CreateModelMixin 下的"),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}}),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("create")]),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("()")]),i._v(" 方法: 封装了添加数据的代码")])])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("mixins.RetrieveModelMixin -> 查询指定数据")])]),t("ul",[t("li",[t("div",[i._v("mixins.RetrieveModelMixin 下的 "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("retrieve()")]),i._v(" 方法: 封装了查询指定数据的代码")])])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("mixins.UpdateModelMixin -> 修改数据")])]),t("ul",[t("li",[t("div",[i._v("mixins.UpdateModelMixin 下的 "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("update()")]),i._v(" 方法: PUT请求 -> 封装了修改数据的代码")])]),t("li",[t("div",[i._v("mixins.UpdateModelMixin 下的 "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("partial_update()")]),i._v(" 方法: PATCH -> 封装了修改数据的代码")])])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("mixins.DestroyModelMixin -> 删除数据")])]),t("ul",[t("li",[t("div",[i._v("mixins.DestroyModelMixin 下的 "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("destroy()")]),i._v(" 方法: 封装了删除数据的代码")])])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics 模块下的 GenericAPIView 类，其实就是继承 rest-framework 中的 APIView，并且在这基础上扩展了一些方法")])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[t("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[i._v("注意")]),i._v(":")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("在使用mixin类编写视图的时候一定要继承 GenericAPIView 类")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("在使用 mixins.UpdateModelMixin 类的时候，要在操作单条数据的url中加上名为 pk 的命名匹配 -> url(r'book/(?P<"),t("span",{staticStyle:{color:"rgb(250, 122, 0)"}},[i._v("pk")]),i._v(">\\d+)', BookDetailView.as_view())")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("在使用mixin类编写视图的时候一定要在该视图类下定义两个静态属性，且这两个静态属性的名字不能随便修改一定要使用这两个属性名: ")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("ul",[t("li",[t("div",[i._v("queryset -> 指定操作那张表的数据")])]),t("li",[t("div",[i._v("serializer_class -> 指定序列化类")])])])])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("span",{staticStyle:{"font-size":"9pt","font-family":"Monaco"}},[t("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# views.py")])],1)]),t("div",[t("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t("br")])]),t("div",[i._v("from django.shortcuts import render, HttpResponse")]),t("div",[i._v("from rest_framework.views import APIView")]),t("div",[i._v("from rest_framework.response import Response")]),t("div",[i._v("from .models import *")]),t("div",[i._v("from .serializer import *")]),t("div",[t("br")]),t("div",[i._v("from rest_framework import "),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins")])],1),t("div",[i._v("from rest_framework import "),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins.ListModelMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins.CreateModelMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.GenericAPIView")]),i._v("):")],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 不能随意修改这两个静态属性名，因为 mixins 模块下的 5 个类需要用到这两个静态属性")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("queryset")]),i._v(" = Book.objects.all()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 指定操作那张表的数据")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("serializer_class")]),i._v(" = BookSerializers  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 指定序列化类")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看所有书籍")])],1),t("div",[i._v("    def get(self, request, *args, **kwargs):")]),t("div",[i._v("        return self."),t("font",{attrs:{color:"#FA7A00"}},[i._v("list")]),i._v("(request, *args, **kwargs)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# self.list() 是 mixins.ListModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了查看所有数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，self.list() 的返回值: Response(数据)")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 添加书籍")])],1),t("div",[i._v("    def post(self, request, *args, **kwargs):")]),t("div",[i._v("        return self."),t("font",{attrs:{color:"#FA7A00"}},[i._v("create")]),i._v("(request, *args, **kwargs)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# self.create() 是 mixins.CreateModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了添加数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，self.create() 的返回值: Response(数据)")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookDetailView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins.RetrieveModelMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins.UpdateModelMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("mixins.DestroyModelMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.GenericAPIView")]),i._v("):")],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 不能随意修改这两个静态属性名，因为 mixins 模块下的 5 个类需要用到这两个静态属性")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("queryset")]),i._v(" = Book.objects.all()  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 指定操作那张表的数据")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("serializer_class")]),i._v(" = BookSerializers  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# 指定序列化类")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看指定的书籍")])],1),t("div",[i._v("    def get(self, request, *args, **kwargs):")]),t("div",[i._v("        return self."),t("font",{attrs:{color:"#FA7A00"}},[i._v("retrieve")]),i._v("(request, *args, **kwargs)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# self.retrieve() 是 mixins.RetrieveModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了查询指定数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，self.retrieve() 的返回值: Response(数据)")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改书籍")])],1),t("div",[i._v("    def put(self, request, *args, **kwargs):")]),t("div",[i._v("        return self."),t("font",{attrs:{color:"#FA7A00"}},[i._v("update")]),i._v("(request, *args, **kwargs)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# self.update() 是 mixins.UpdateModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了修改数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，self.update() 的返回值: Response(数据)")])],1),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 删除书籍")])],1),t("div",[i._v("    def delete(self, request, *args, **kwargs):")]),t("div",[i._v("        return self."),t("font",{attrs:{color:"#FA7A00"}},[i._v("destroy")]),i._v("(request, *args, **kwargs)  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# self.destroy() 是 mixins.DestroyModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了删除数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，self.destroy() 的返回值: Response(数据)")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishView(mixins.ListModelMixin, mixins.CreateModelMixin, generics.GenericAPIView):")]),t("div",[t("br")]),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看所有出版社")])],1),t("div",[i._v("    def get(self, request, *args, **kwargs):")]),t("div",[i._v("        return self.list(request, *args, **kwargs)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 添加出版社")])],1),t("div",[i._v("    def post(self, request, *args, **kwargs):")]),t("div",[i._v("        return self.create(request, *args, **kwargs)")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishDetailView(mixins.RetrieveModelMixin, mixins.UpdateModelMixin, mixins.DestroyModelMixin, generics.GenericAPIView):")]),t("div",[t("br")]),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 查看指定的出版社")])],1),t("div",[i._v("    def get(self, request, *args, **kwargs):")]),t("div",[i._v("        return self.retrieve(request, *args, **kwargs)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 修改出版社")])],1),t("div",[i._v("    def put(self, request, *args, **kwargs):")]),t("div",[i._v("        return self.update(request, *args, **kwargs)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# 删除出版社")])],1),t("div",[i._v("    def delete(self, request, *args, **kwargs):")]),t("div",[i._v("        return self.destroy(request, *args, **kwargs)")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# serializer.py")])],1),t("div",[t("br")]),t("div",[i._v("from rest_framework import serializers")]),t("div",[i._v("from .models import *")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishSerializers(serializers.ModelSerializer):")]),t("div",[i._v("    class Meta:")]),t("div",[i._v("        model = Publish")]),t("div",[i._v("        fields = '__all__'")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookSerializers(serializers.ModelSerializer):")]),t("div",[i._v("    class Meta:")]),t("div",[i._v("        model = Book")]),t("div",[i._v("        fields = '__all__'")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# urls.py")])],1),t("div",[t("br")]),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'^admin/', admin.site.urls),")]),t("div",[t("br")]),t("div",[i._v("    url(r'book/$', BookView.as_view()),")]),t("div",[i._v("    url(r'book/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', BookDetailView.as_view()),")],1),t("div",[t("br")]),t("div",[i._v("    url(r'publish/$', PublishView.as_view()),")]),t("div",[i._v("    url(r'publish/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', PublishDetailView.as_view()),")],1),t("div",[i._v("]")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("3.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v(" 使用通用的基于类的视图")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[i._v("使用通用的基于类的视图说明:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[t("span",{staticStyle:{"font-size":"12pt"}},[i._v("简化了mixin类编写视图的操作")])])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics 模块下的类的功能说明:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("GenericAPIView 继承了 APIView，且在这基础上扩展了新的功能")])]),t("li",[t("div",[i._v("----------------------------------------------------")])]),t("li",[t("div",[i._v("generics.ListAPIView  提供了 查询所有数据 的功能")])]),t("li",[t("div",[i._v("generics.CreateAPIView 提供了 添加数据 的功能")])]),t("li",[t("div",[i._v("generics.ListCreateAPIView 提供了 查询所有数据、添加数据 的功能")])]),t("li",[t("div",[i._v("generics.RetrieveAPIView 提供了 查询指定数据 的功能")])]),t("li",[t("div",[i._v("generics.UpdateAPIView 提供了 修改数据 的功能")])]),t("li",[t("div",[i._v("generics.DestroyAPIView 提供了 删除数据 的功能")])]),t("li",[t("div",[i._v("generics.RetrieveUpdateAPIView 提供了 查询指定数据、修改数据 的功能")])]),t("li",[t("div",[i._v("generics.RetrieveDestroyAPIView 提供了 查询指定数据、删除数据 的功能")])]),t("li",[t("div",[i._v("generics.RetrieveUpdateDestroyAPIView 提供了 查询指定数据、修改数据、删除数据 的功能")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.ListAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询所有数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.ListModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.ListModelMixin 下的 list() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.CreateAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 添加数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.CreateModelMixin")])]),t("li",[t("div",[i._v("提供了处理 POST 请求的方法")])]),t("li",[t("div",[i._v("处理POST请求的方法调用了 mixins.CreateModelMixin 下的 create() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.ListCreateAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询所有数据、添加数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.ListModelMixin / mixins.CreateModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET / POST 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.ListModelMixin 下的 list() 方法")])]),t("li",[t("div",[i._v("处理POST请求的方法调用了 mixins.CreateModelMixin 下的 create() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.RetrieveAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询指定数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.RetrieveModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.RetrieveModelMixin 下的 retrieve() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.UpdateAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 修改数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.UpdateModelMixin")])]),t("li",[t("div",[i._v("提供了处理 PUT / PATCH 请求的方法")])]),t("li",[t("div",[i._v("处理PUT请求的方法调用了 mixins.UpdateModelMixin 下的 update() 方法")])]),t("li",[t("div",[i._v("处理PATCH请求的方法调用了 mixins.UpdateModelMixin 下的 partial_update() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.DestroyAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 删除数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.DestroyModelMixin")])]),t("li",[t("div",[i._v("提供了处理 DELETE 请求的方法")])]),t("li",[t("div",[i._v("处理DELETE请求的方法调用了 mixins.DestroyModelMixin 下的 destroy() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.RetrieveUpdateAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询指定数据、修改数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.RetrieveModelMixin / mixins.UpdateModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET / PUT / PATCH 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.RetrieveModelMixin 下的 retrieve() 方法")])]),t("li",[t("div",[i._v("处理PUT请求的方法调用了 mixins.UpdateModelMixin 下的 update() 方法")])]),t("li",[t("div",[i._v("处理PATCH请求的方法调用了 mixins.UpdateModelMixin 下的 partial_update() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.RetrieveDestroyAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询指定数据、删除数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.RetrieveModelMixin / mixins.DestroyModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET / DELETE 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.RetrieveModelMixin 下的 retrieve() 方法")])]),t("li",[t("div",[i._v("处理DELETE请求的方法调用了 mixins.DestroyModelMixin 下的 destroy() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("generics.RetrieveUpdateDestroyAPIView 的说明:")])]),t("ul",[t("li",[t("div",[i._v("提供了 查询指定数据、修改数据、删除数据 的功能")])]),t("li",[t("div",[i._v("---------------------------------------")])]),t("li",[t("div",[i._v("继承了 mixins.RetrieveModelMixin / mixins.UpdateModelMixin / mixins.DestroyModelMixin")])]),t("li",[t("div",[i._v("提供了处理 GET / PUT / PATCH / DELETE 请求的方法")])]),t("li",[t("div",[i._v("处理GET请求的方法调用了 mixins.RetrieveModelMixin 下的 retrieve() 方法")])]),t("li",[t("div",[i._v("处理PUT请求的方法调用了 mixins.UpdateModelMixin 下的 update() 方法")])]),t("li",[t("div",[i._v("处理PATCH请求的方法调用了 mixins.UpdateModelMixin 下的 partial_update() 方法")])]),t("li",[t("div",[i._v("处理DELETE请求的方法调用了 mixins.DestroyModelMixin 下的 destroy() 方法")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[t("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[i._v("注意")]),i._v(":")])]),t("ul",[t("li",[t("div",[i._v("一定要继承 generics 模块所提供的功能类")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("如果继承了 generics.UpdateAPIView 等涉及到修改数据的功能类，那么就要在操作单条数据的url中加上名为 pk 的命名匹配，因为修改数据的功能类继承了mixins.UpdateModelMixin类，且mixins.UpdateModelMixin类中的代码是通过“pk”这个名字去获取url中的参数，然后才能查询到指定的数据对象 -> url(r'book/(?P<"),t("span",{staticStyle:{color:"rgb(250, 122, 0)"}},[i._v("pk")]),i._v(">\\d+)', BookDetailView.as_view({'请求方式': '视图类的处理请求的方法名'}))")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("在编写视图的时候一定要在该视图类下定义两个静态属性，且这两个静态属性的名字不能随便修改一定要使用这两个属性名: ")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("ul",[t("li",[t("div",[i._v("queryset -> 指定操作那张表的数据")])]),t("li",[t("div",[i._v("serializer_class -> 指定序列化类")])])])])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("span",{staticStyle:{"font-size":"9pt","font-family":"Monaco"}},[t("font",{attrs:{color:"#41AD1C"}},[i._v("# views.py")])],1)]),t("div",[t("span",{staticStyle:{"font-size":"9pt","font-family":"Monaco"}},[t("font",{attrs:{color:"#41AD1C"}},[t("br")])],1)]),t("div",[i._v("from .models import *")]),t("div",[i._v("from .serializer import *")]),t("div",[t("br")]),t("div",[i._v("from rest_framework import "),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.ListCreateAPIView")]),i._v("):")],1),t("div",[i._v("    queryset = Book.objects.all()")]),t("div",[i._v("    serializer_class = BookSerializers")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookDetailView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.RetrieveUpdateDestroyAPIView")]),i._v("):")],1),t("div",[i._v("    queryset = Book.objects.all()")]),t("div",[i._v("    serializer_class = BookSerializers")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.ListCreateAPIView")]),i._v("):")],1),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishDetailView("),t("font",{attrs:{color:"#FA7A00"}},[i._v("generics.RetrieveUpdateDestroyAPIView")]),i._v("):")],1),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# urls.py")])],1),t("div",[t("br")]),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'^admin/', admin.site.urls),")]),t("div",[t("br")]),t("div",[i._v("    url(r'book/$', BookView.as_view()),")]),t("div",[i._v("    url(r'book/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', BookDetailView.as_view()),")],1),t("div",[t("br")]),t("div",[i._v("    url(r'publish/$', PublishView.as_view()),")]),t("div",[i._v("    url(r'publish/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', PublishDetailView.as_view()),")],1),t("div",[i._v("]")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("4.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("终极版")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[i._v("终极版的说明:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("两条url使用同一个视图类")])]),t("li",[t("div",[i._v("视图类不再继承mixins模块下的5个类，而是继承 ModelViewSet 类")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("ModelViewSet类的说明:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("ModelViewSet类已经继承了mixins模块下的5个类")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v(".as_view() 新用法的说明:")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("viewsets模块下的ViewSetMixin类通过重写 .as_view() 方法，实现了通过传递的字典（{'get':'list', 'post':'create'}）方式对处理http请求的方法进行分发")])])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[t("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[i._v("注意")]),i._v(":")])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("一定要继承 ModelViewSet 类")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("要在操作单条数据的url中加上名为 pk 的命名匹配，因为ModelViewSet类继承了mixins.UpdateModelMixin类，且mixins.UpdateModelMixin类中的代码是通过“pk”这个名字去获取url中的参数，然后才能查询到指定的数据对象 -> url(r'book/(?P<"),t("span",{staticStyle:{color:"rgb(250, 122, 0)"}},[i._v("pk")]),i._v(">\\d+)', BookDetailView.as_view({'请求方式': '视图类的处理请求的方法名'}))")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("li",[t("div",[i._v("在编写视图的时候一定要在该视图类下定义两个静态属性，且这两个静态属性的名字不能随便修改一定要使用这两个属性名: ")])])])]),t("div",[t("br")]),t("ul",[t("ul",[t("ul",[t("li",[t("div",[i._v("queryset -> 指定操作那张表的数据")])]),t("li",[t("div",[i._v("serializer_class -> 指定序列化类")])])])])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# views.py")])],1),t("div",[t("br")]),t("div",[i._v("from django.shortcuts import render, HttpResponse")]),t("div",[i._v("from rest_framework.views import APIView")]),t("div",[i._v("from rest_framework.response import Response")]),t("div",[i._v("from .models import *")]),t("div",[i._v("from .serializer import *")]),t("div",[t("br")]),t("div",[i._v("from rest_framework import "),t("font",{attrs:{color:"#FA7A00"}},[i._v("viewsets")])],1),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookViewSet("),t("font",{attrs:{color:"#FA7A00"}},[i._v("viewsets.ModelViewSet")]),i._v("):")],1),t("div",[i._v("    queryset = Book.objects.all()")]),t("div",[i._v("    serializer_class = BookSerializers")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishViewSet("),t("font",{attrs:{color:"#FA7A00"}},[i._v("viewsets.ModelViewSet")]),i._v("):")],1),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# urls.py")])],1),t("div",[t("font",{attrs:{color:"#41AD1C"}},[t("br")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("# url(r'book/$', BookViewSet.as_view({'请求类型': '视图类的处理请求的方法名'})")])],1),t("div",[t("font",{attrs:{color:"#FA7A00"}},[t("br")])],1),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'^admin/', admin.site.urls),")]),t("div",[t("br")]),t("div",[i._v("    url(r'book/$', BookViewSet."),t("font",{attrs:{color:"#FA7A00"}},[i._v("as_view")]),i._v("({")],1),t("div",[i._v('        "get": "list",  '),t("font",{attrs:{color:"#41AD1C"}},[i._v("# list 方法是 mixins.ListModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了查看所有数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.ListModelMixin 所以可以使用 list 方法")])],1),t("div",[i._v('        "post": "create"  '),t("font",{attrs:{color:"#41AD1C"}},[i._v("# create 方法是 mixins.CreateModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了添加数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.CreateModelMixin 所以可以使用 create 方法")])],1),t("div",[i._v("    })),")]),t("div",[i._v("    url(r'book/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', BookViewSet."),t("font",{attrs:{color:"#FA7A00"}},[i._v("as_view")]),i._v("({")],1),t("div",[i._v("        'get': 'retrieve',  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# retrieve 方法是 mixins.RetrieveModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了查询指定数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.RetrieveModelMixin 所以可以使用 retrieve 方法")])],1),t("div",[i._v("        'put': 'update',  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# update 方法是 mixins.UpdateModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了修改数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 update 方法")])],1),t("div",[i._v("        'patch': 'partial_update',  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# partial_update 方法是 mixins.UpdateModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了修改数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 partial_update 方法")])],1),t("div",[i._v("        'delete': 'destroy'  "),t("font",{attrs:{color:"#41AD1C"}},[i._v("# destroy 方法是 mixins.DestroyModelMixin 所提供的方法，")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("封装了删除数据的代码")]),t("font",{attrs:{color:"#41AD1C"}},[i._v("，由于 viewsets.ModelViewSet 继承了 mixins.DestroyModelMixin 所以可以使用 destroy 方法")])],1),t("div",[i._v("    })),")]),t("div",[t("br")]),t("div",[i._v("    url(r'publish/$', PublishViewSet."),t("font",{attrs:{color:"#FA7A00"}},[i._v("as_view")]),i._v("({")],1),t("div",[i._v('        "get": "list",')]),t("div",[i._v('        "post": "create"')]),t("div",[i._v("    })),")]),t("div",[i._v("    url(r'publish/("),t("font",{attrs:{color:"#FA7A00"}},[i._v("?P<pk>")]),i._v("\\d+)', PublishViewSet."),t("font",{attrs:{color:"#FA7A00"}},[i._v("as_view")]),i._v("({")],1),t("div",[i._v("        'get': 'retrieve',")]),t("div",[i._v("        'put': 'update',")]),t("div",[i._v("        'patch': 'partial_update',")]),t("div",[i._v("        'delete': 'destroy'")]),t("div",[i._v("    })),")]),t("div",[i._v("]")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("4.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt"}},[t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("重写 list、create、retrieve、update、partial_update、destroy 方法")])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("如果默认返回给前端的数据结构不合适的话，可以通过重写 list 等方法重新构造数据结构")])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("原理: 在视图类下重写 list 等方法，那么就不会执行 mixin 模块下的5个类所分别提供的方法（即: "),t("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[i._v("list、create、retrieve、update、partial_update、destroy")]),i._v("）")])])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# views.py")])]),t("div",[t("br")]),t("div",[i._v("from django.shortcuts import render, HttpResponse")]),t("div",[i._v("from rest_framework.views import APIView")]),t("div",[i._v("from rest_framework.response import Response")]),t("div",[i._v("from .models import *")]),t("div",[i._v("from .serializer import *")]),t("div",[t("br")]),t("div",[i._v("from rest_framework import viewsets")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookViewSet(viewsets.ModelViewSet):")]),t("div",[i._v("    queryset = Book.objects.all()")]),t("div",[i._v("    serializer_class = BookSerializers")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("# 重写编写 list 方法覆盖 mixins.ListModelMixin 类下的 list 方法")])],1),t("div",[i._v("    def "),t("font",{attrs:{color:"#FA7A00"}},[i._v("list")]),i._v("(self, request, *args, **kwargs):")],1),t("div",[i._v("        ret = {")]),t("div",[i._v("            'static': 1,")]),t("div",[i._v("            'data': {")]),t("div",[i._v("                'a': 1,")]),t("div",[i._v("                'b': 2,")]),t("div",[i._v("            }")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#FA7A00"}},[i._v("# 重写编写 retrieve 方法覆盖 mixins.RetrieveModelMixin 类下的 retrieve 方法")])],1),t("div",[i._v("    def "),t("font",{attrs:{color:"#FA7A00"}},[i._v("retrieve")]),i._v("(self, request, *args, **kwargs):")],1),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所查询到的单条数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class PublishViewSet(viewsets.ModelViewSet):")]),t("div",[i._v("    queryset = Publish.objects.all()")]),t("div",[i._v("    serializer_class = PublishSerializers")])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# urls.py")])]),t("div",[t("br")]),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'^admin/', admin.site.urls),")]),t("div",[t("br")]),t("div",[i._v("    url(r'book/$', BookViewSet."),t("font",{attrs:{color:"#000000"}},[i._v("as_view")]),i._v("({")],1),t("div",[i._v('        "get": "list",  '),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# list 方法是 mixins.ListModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.ListModelMixin 所以可以使用 list 方法")])]),t("div",[i._v('        "post": "create"  '),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# create 方法是 mixins.CreateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.CreateModelMixin 所以可以使用 create 方法")])]),t("div",[i._v("    })),")]),t("div",[t("font",{attrs:{color:"#000000"}},[i._v(" url(r'book/(?P<pk>\\d+)', BookViewSet.as_view")]),i._v("({")],1),t("div",[i._v("        'get': 'retrieve',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# retrieve 方法是 mixins.RetrieveModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.RetrieveModelMixin 所以可以使用 retrieve 方法")])]),t("div",[i._v("        'put': 'update',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# update 方法是 mixins.UpdateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 update 方法")])]),t("div",[i._v("        'patch': 'partial_update',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# partial_update 方法是 mixins.UpdateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 partial_update 方法")])]),t("div",[i._v("        'delete': 'destroy'  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# destroy 方法是 mixins.DestroyModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.DestroyModelMixin 所以可以使用 destroy 方法")])]),t("div",[i._v("    })),")]),t("div",[t("br")]),t("div",[t("font",{attrs:{color:"#000000"}},[i._v("url(r'publish/$', PublishViewSet.as_view")]),i._v("({")],1),t("div",[i._v('        "get": "list",')]),t("div",[i._v('        "post": "create"')]),t("div",[i._v("    })),")]),t("div",[t("font",{attrs:{color:"#000000"}},[i._v("url(r'publish/(?P<pk>\\d+)', PublishViewSet.as_view")]),i._v("({")],1),t("div",[i._v("        'get': 'retrieve',")]),t("div",[i._v("        'put': 'update',")]),t("div",[i._v("        'patch': 'partial_update',")]),t("div",[i._v("        'delete': 'destroy'")]),t("div",[i._v("    })),")]),t("div",[i._v("]")])]),t("div",[t("br")]),t("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[t("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[i._v(".as_view() 的新用法")])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("1.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v(".as_view() 新用法的说明")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[i._v(".as_view() 新用法的作用就是两条url使用同一个视图类")])]),t("li",[t("div",[i._v(".as_view() 新用法其实就是视图四部曲中的终极版")])])]),t("div",[t("br")]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("2.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v(".as_view() 新的使用方式一")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[i._v("viewsets模块下的ViewSetMixin类通过重写 .as_view() 方法，实现了通过传递的字典（{'get':'list', 'post':'create'}）方式对处理http请求的方法进行分发")])])]),t("div",[t("br")]),t("ul",[t("li",[t("div",[i._v("通过继承 ViewSetMixin 类 和 APIView 类 实现 .as_view() 的新用法")])])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[i._v("# views.py")])],1),t("div",[t("font",{attrs:{color:"#41AD1C"}},[t("br")])],1),t("div",[i._v("from rest_framework.views import APIView")]),t("div",[i._v("from rest_framework.response import Response")]),t("div",[t("br")]),t("div",[i._v("from rest_framework import viewsets")]),t("div",[t("br")]),t("div",[t("br")]),t("div",[i._v("class BookViewSet("),t("font",{attrs:{color:"#FA7A00"}},[i._v("viewsets.ViewSetMixin")]),i._v(", "),t("font",{attrs:{color:"#FA7A00"}},[i._v("APIView")]),i._v("):")],1),t("div",[t("br")]),t("div",[i._v("    def list(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所查询到的所有数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[i._v("    def create(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所添加的数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[i._v("    def retrieve(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所查询到的单条数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        print(ret)")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[i._v("    def update(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所修改的数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[i._v("    def partial_update(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '你所修改的数据'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")]),t("div",[t("br")]),t("div",[i._v("    def destroy(self, request, *args, **kwargs):")]),t("div",[i._v("        ret = {")]),t("div",[i._v("            'data': '删除数据成功'")]),t("div",[i._v("        }")]),t("div",[i._v("        return Response(ret)")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# urls.py")])]),t("div",[t("br")]),t("div",[i._v("urlpatterns = [")]),t("div",[i._v("    url(r'book/$', BookViewSet."),t("span",{staticStyle:{color:"rgb(0, 0, 0)"}},[i._v("as_view")]),i._v("({")]),t("div",[i._v('        "get": "list",  '),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# list 方法是 mixins.ListModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.ListModelMixin 所以可以使用 list 方法")])]),t("div",[i._v('        "post": "create"  '),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# create 方法是 mixins.CreateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.CreateModelMixin 所以可以使用 create 方法")])]),t("div",[i._v("    })),")]),t("div",[t("span",{staticStyle:{color:"rgb(0, 0, 0)"}},[i._v(" url(r'book/(?P<pk>\\d+)', BookViewSet.as_view")]),i._v("({")]),t("div",[i._v("        'get': 'retrieve',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# retrieve 方法是 mixins.RetrieveModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.RetrieveModelMixin 所以可以使用 retrieve 方法")])]),t("div",[i._v("        'put': 'update',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# update 方法是 mixins.UpdateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 update 方法")])]),t("div",[i._v("        'patch': 'partial_update',  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# partial_update 方法是 mixins.UpdateModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.UpdateModelMixin 所以可以使用 partial_update 方法")])]),t("div",[i._v("        'delete': 'destroy'  "),t("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("# destroy 方法是 mixins.DestroyModelMixin 所提供的方法，由于 viewsets.ModelViewSet 继承了 mixins.DestroyModelMixin 所以可以使用 destroy 方法")])]),t("div",[i._v("    })),")]),t("div",[i._v("]")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[i._v("3.")]),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),t("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v(".as_view() 新的使用方式二")])]),t("div",[t("span",{staticStyle:{"font-size":"14pt"}},[t("br")])]),t("ul",[t("li",[t("div",[t("span",{staticStyle:{"font-size":"12pt"}},[i._v(".as_view() 的使用方式二实际上就是视图四部曲中的终极版，通过继承 ")]),i._v("ModelViewSet 类，实际上 ModelViewSet 类也是继承了 viewsets 模块下的 ViewSetMixin 类")])])]),t("div",[t("br")]),t("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[t("div",[t("font",{attrs:{color:"#41AD1C"}},[t("span",{staticStyle:{"font-size":"9pt","font-family":"Monaco"}},[i._v("这里就不做代码演示了不懂的可以看回 视图四部曲中的终极版 或者 查看 ")]),i._v("ModelViewSet 类的源码")])],1)]),t("div",[t("span",{staticStyle:{"font-size":"14pt","font-family":'"Helvetica Neue"'}},[t("br")])])]),t("div",[t("br")]),t("div",[t("br")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);