(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{564:function(i,t,o){"use strict";o.r(t);var r=o(25),v=Object(r.a)({},(function(){var i=this,t=i.$createElement,o=i._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("div",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("并发编程是指在一台处理器上“同时”处理多个任务。")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("多进程就是用来实现并发编程")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("多进程可以理解为多个异步的代码")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)"}},[i._v("进程就是为了实现代码的异步执行")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)"}},[i._v("如果开启了多进程，就是多个进程几乎同时开始执行")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("进程的使用场景:")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("如果两个任务需要数据隔离，且想实现异步，那么就是用多进程")])])]),o("li",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[i._v("高计算类型的程序（只是做算数用的程序）一般都会多进程")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold",color:"rgb(173, 0, 0)"}},[i._v("开多进程，进程数超过3个以上就使用进程池来处理")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[i._v("multiprocess 模块 -> 综合的管理进程的包")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[i._v("在window下做开发所有创建进程的程序都要放在 ")])]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[i._v("if __name__ == '__main__' 下执行，因为当创建一个子进程会把代码在执行一遍，就是为了避免死循环")])])]),o("div",[o("font",{staticStyle:{"font-size":"14pt"}},[o("br")])],1),o("div",[o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("font",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[i._v("当多个进程去修改同一个数据的时候，就会引发数据安全或顺序混乱问题。")])])],1)]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("1.")]),i._v(" "),o("span",{staticStyle:{"font-size":"18.6667px"}},[o("span",{staticStyle:{"font-size":"18.6667px","font-weight":"bold"}},[i._v("获取进程的 pid")])])]),o("div",[o("span",{staticStyle:{"font-size":"18.6667px"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{staticStyle:{"font-size":"9pt"}},[i._v("import os")])],1),o("div",[o("font",{staticStyle:{"font-size":"9pt"}},[o("br")])],1),o("div",[o("font",{staticStyle:{"font-size":"9pt"}},[i._v("print(os.getpid())  # 248 获取当前进程的 pid")])],1),o("div",[o("font",{staticStyle:{"font-size":"9pt"}},[i._v("print(os.getppid())  # 5604 获取当前父进程的 pid")])],1)]),o("div",[o("font",{staticStyle:{"font-size":"14pt"}},[o("br")])],1),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("2.")]),i._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("Process 类 -> 用于创建进程")])]),o("div",[o("font",{staticStyle:{"font-size":"12pt"}},[o("br")])],1),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[i._v("Process(target=函数名, args=函数接收的参数) -> ")]),o("span",{staticStyle:{"font-size":"12pt"}},[i._v("args 必须接收一个元组")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(d1, d2):")]),o("div",[i._v("    print('----子进程----')")]),o("div",[i._v("    print(d1, d2)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[o("br")]),o("div",[i._v("    p = Process(target=fn, args=('数据一', '数据二'))  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 创建一个进程执行一个函数 ->")]),i._v(" "),o("font",{attrs:{color:"#E30000"}},[i._v("此时 if __name__ == '__main__': 下的代码就相当于主进程，而 fn函数 就相当于子进程")])],1),o("div",[o("br")]),o("div",[i._v("    p.start()  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 启动进程，执行进程所绑定的函数")])],1),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------') "),o("font",{attrs:{color:"#E30000"}},[o("b",[i._v(" # 当进程启动后 p.start() 下方的代码不会等待进程所绑定的函数执行完再开始执行，而是直接往下执行，因为此时进程所绑定的函数已经变成了异步代码了")])])],1),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # ")]),o("font",{attrs:{color:"#41AD1C"}},[i._v("-------主进程-------")])],1),o("div",[o("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[i._v("        # ----子进程----")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 数据一 数据二")])],1)]),o("div",[o("br")]),o("div",[o("img",{attrs:{"data-filename":"TIM截图2019030416500.png",src:"/kevin-blog/Python/multiprocessing 进程模块_files/TIM截图2019030416500.png",type:"image/png"}})]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v(".join() -> 主进程的代码会在 .json() 这里进行阻塞，等待子进程（进程所绑定的函数）执行完后，才会往下执行 -> "),o("span",{staticStyle:{color:"rgb(227, 0, 0)","font-weight":"bold"}},[i._v("当使用了.join()，程序就会变成同步执行了")])])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(d1, d2):")]),o("div",[i._v("    print('----子进程----')")]),o("div",[i._v("    print(d1, d2)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = Process(target=fn, args=('数据一', '数据二'))")]),o("div",[o("br")]),o("div",[i._v("    p.start()")]),o("div",[o("br")]),o("div",[i._v("    p.join()  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 阻塞 -> 等待子进程（进程所绑定的函数）执行完后，才会往下执行")])],1),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # ----子进程----")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 数据一 数据二")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v("开启多个子进程")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 开启多个子进程一")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(d1, d2):")]),o("div",[i._v("    print(d1, d2)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p1 = Process(target=fn, args=('数据一', '数据二'))  # 创建第一个进程")]),o("div",[i._v("    p2 = Process(target=fn, args=('data1', 'data2'))  # 创建第二个进程")]),o("div",[i._v("    p1.start()  # 执行第一个进程")]),o("div",[i._v("    p2.start()  # 执行第二个进程")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 数据一 数据二")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # data1 data2")])],1)]),o("div",[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 开启多个子进程二")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(data):")]),o("div",[i._v("    print(data)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    for i in range(10):")]),o("div",[i._v("        p = Process(target=fn, args=(i,))")]),o("div",[i._v("        p.start()")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 0")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 1")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 2")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 3")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 4")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 5")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 6")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 7")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 8")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 9")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v("当所有子进程执行完后，主进程才开始执行")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 正确示范一")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(d1, d2):")]),o("div",[i._v("    print(d1, d2)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p1 = Process(target=fn, args=('数据一', '数据二'))")]),o("div",[i._v("    p2 = Process(target=fn, args=('data1', 'data2'))")]),o("div",[i._v("    p1.start()")]),o("div",[i._v("    p2.start()")]),o("div",[o("br")]),o("div",[i._v("    p1.join()")]),o("div",[i._v("    p2.join()")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 数据一 数据二")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # data1 data2")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1)]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 正确示范二")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(data):")]),o("div",[i._v("    print(data)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p_list = []")]),o("div",[i._v("    for i in range(10):")]),o("div",[i._v("        p = Process(target=fn, args=(i,))")]),o("div",[i._v("        p.start()")]),o("div",[i._v("        p_list.append(p)  "),o("font",{attrs:{color:"#41AD1C"}},[i._v("# 将所有子进程放进列表中")])],1),o("div",[o("br")]),o("div",[i._v("    for i in p_list:  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 当所有子进程都执行完了才会继续往执行")])],1),o("div",[i._v("        i.join()")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 1")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 0")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 2")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 3")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 4")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 5")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 6")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 7")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 8")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 9")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1)]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 错误示范一")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(data):")]),o("div",[i._v("    print(data)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p_list = []")]),o("div",[i._v("    for i in range(10):")]),o("div",[i._v("        p = Process(target=fn, args=(i,))")]),o("div",[i._v("        p.start()")]),o("div",[i._v("        p.join()  # 如果join放在循环里就表示当绑定的函数执行完才循环一次")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 错误示范二")]),o("div",[o("br")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(data):")]),o("div",[i._v("    print(data)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p_list = []")]),o("div",[i._v("    for i in range(10):")]),o("div",[i._v("        p = Process(target=fn, args=(i,))")]),o("div",[i._v("        p.start()")]),o("div",[o("br")]),o("div",[i._v("    p.join()  # 如果 join放在外面就表示阻塞子进程最后一个")]),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v("开启多个子进程使用 .join() 的注意事项")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fn(d1, d2):")]),o("div",[i._v("    print('----子进程----')")]),o("div",[i._v("    print(d1, d2)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p1 = Process(target=fn, args=('数据一', '数据二'))")]),o("div",[i._v("    p2 = Process(target=fn, args=('data1', 'data2'))")]),o("div",[i._v("    p1.start()")]),o("div",[i._v("    p2.start()")]),o("div",[o("br")]),o("div",[i._v("    p1.join()  "),o("font",{staticStyle:{color:"rgb(227, 0, 0)"}},[i._v("# 此时等待p1的子进程（进程所绑定的函数）执行完后，才会往下执行，而不是等待所有子进程结束")])],1),o("div",[o("br")]),o("div",[i._v("    print('-------主进程-------')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # ----子进程----")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 数据一 数据二")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -------主进程-------")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # ----子进程----")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # data1 data2")])],1)]),o("div",[o("br")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap",color:"rgb(227, 0, 0)","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("2.")]),o("span",{staticStyle:{color:"rgb(227, 0, 0)"}}),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[i._v("进程函数调用外部变量或函数的注意事项")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[i._v("如果要调用的变量和函数在 ")]),i._v("if __name__ == '__main__': 里面必须用传参的形式调用不然就会报错，因为进程函数无法直接调用 if __name__ == '__main__': 里面的方法和函数，如果是直接执行该函数是可以的，但是如果是被进程执行就不行")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[i._v("def fun(if_data):")]),o("div",[i._v("    print(data)  "),o("font",{staticStyle:{color:"rgb(227, 0, 0)"}},[i._v("# 直接调用进程函数外部的并且不在 if __name__ == '__main__': 里面的变量，函数是可以直接调用函数外部的变量或方法（因为作用域链）")])],1),o("div",[i._v("    print(if_data) "),o("font",{staticStyle:{color:"rgb(227, 0, 0)"}},[i._v(" # 使用传参的形式调用 if __name__ == '__main__': 里面的变量")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[i._v("data = '外部参数'")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    if_data = 'if_main里面的参数'")]),o("div",[i._v("    p = Process(target=fun, args=(if_data,))")]),o("div",[i._v("    p.start()")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("3.")]),i._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("创建进程的方法二 -> 通过继承方式")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("import os")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[i._v("class MyProcess(Process):  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 通过继承 Process 类，从而创建一个进程")])],1),o("div",[i._v("    def __init__(self, d1, d2):")]),o("div",[i._v("        super().__init__()")]),o("div",[i._v("        self.d1 = d1")]),o("div",[i._v("        self.d2 = d2")]),o("div",[o("br")]),o("div",[i._v("    def run(self):  "),o("font",{attrs:{color:"#E30000"}},[i._v("# run 方法就相当于进程所绑定的函数")])],1),o("div",[i._v("        print('子进程: ', os.getpid(), self.d1, self.d2)")]),o("div",[i._v("        self.other_fn()")]),o("div",[o("br")]),o("div",[i._v("    def other_fn(self):")]),o("div",[i._v("        print('其他方法')")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = MyProcess('数据1', '数据2')  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 创建一个进程")])],1),o("div",[i._v("    p.start()  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 当进程启动的时候就会调用类中的 run 方法")])],1),o("div",[i._v("    print('-----主进程-----')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 执行结果:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # -----主进程-----")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 子进程:  3116 数据1 数据2")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("        # 其他方法")])],1)]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("4.")]),i._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("多进程的应用")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[i._v("创建多个进程实现TCP协议多人聊天 -> 因为每个进程之间是独立的所以可以实现TCP协议的多人通讯")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# server.py")]),o("div",[o("br")]),o("div",[i._v("import socket")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def talk(conn):")]),o("div",[i._v("    conn.send(b'world')")]),o("div",[i._v("    msg = conn.recv(1024).decode('utf-8')")]),o("div",[i._v("    print(msg)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    sk = socket.socket()")]),o("div",[i._v("    sk.bind(('127.0.0.1', 8080))")]),o("div",[i._v("    sk.listen()")]),o("div",[i._v("    while True:")]),o("div",[i._v("        conn, addr = sk.accept()  # 等待客户端链接")]),o("div",[i._v("        p = Process(target=talk, args=(conn,))")]),o("div",[i._v("        p.start()")]),o("div",[i._v("    conn.close()")]),o("div",[i._v("    sk.close()")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# client1.py")]),o("div",[o("br")]),o("div",[i._v("import socket")]),o("div",[o("br")]),o("div",[i._v("sk = socket.socket()")]),o("div",[i._v("sk.connect(('127.0.0.1', 8080))")]),o("div",[o("br")]),o("div",[i._v("print(sk.recv(1024).decode('utf-8'))")]),o("div",[i._v("sk.send(input('>>>').encode('utf-8'))")]),o("div",[i._v("sk.close()")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# client2.py")]),o("div",[o("br")]),o("div",[i._v("import socket")]),o("div",[o("br")]),o("div",[i._v("sk = socket.socket()")]),o("div",[i._v("sk.connect(('127.0.0.1', 8080))")]),o("div",[o("br")]),o("div",[i._v("print(sk.recv(1024).decode('utf-8'))")]),o("div",[i._v("sk.send(input('>>>').encode('utf-8'))")]),o("div",[i._v("sk.close()")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[i._v("5.")]),i._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[i._v("守护进程")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[i._v("守护进程会随着主进程的代码执行结束而结束，不会等待其他子进程")])])]),o("div",[o("br")]),o("div",[o("img",{attrs:{"data-filename":"4Z36A(BHI]LT)2FCL(]4T1.png",src:"/kevin-blog/Python/multiprocessing 进程模块_files/4Z36A(BHI]LT)2FCL(]4T1.png",type:"image/png"}})]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 报时器例子： 每个1秒就会报一次时")]),o("div",[i._v("# 开启了守护进程 -> cal_time 会随着主进程的代码执行结束而结束")]),o("div",[o("br")]),o("div",[i._v("import time")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def cal_time():")]),o("div",[i._v("    while True:")]),o("div",[i._v("        time.sleep(1)")]),o("div",[i._v("        print('过去了1秒')")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = Process(target=cal_time)")]),o("div",[i._v("    p.daemon = True  "),o("font",{attrs:{color:"#E30000"}},[i._v("# 开启守护进程，一定要设置在 start 之前")])],1),o("div",[i._v("    p.start()")]),o("div",[i._v("    for i in range(100):")]),o("div",[i._v("        time.sleep(0.1)")]),o("div",[i._v("        print('*' * i)")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 报时器例子： 每个1秒就会报一次时")]),o("div",[i._v("# 没有开启守护进程 -> cal_time子进程会一直执行")]),o("div",[o("br")]),o("div",[i._v("import time")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def cal_time():")]),o("div",[i._v("    while True:")]),o("div",[i._v("        time.sleep(1)")]),o("div",[i._v("        print('过去了1秒')")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = Process(target=cal_time)")]),o("div",[i._v("    p.start()")]),o("div",[i._v("    for i in range(100):")]),o("div",[i._v("        time.sleep(0.1)")]),o("div",[i._v("        print('*' * i)")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("# 上面图片的代码")]),o("div",[o("br")]),o("div",[i._v("import time")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 守护进程")])],1),o("div",[i._v("def cal_time():")]),o("div",[i._v("    while True:")]),o("div",[i._v("        time.sleep(1)")]),o("div",[i._v("        print('过去了1秒')")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 其他子进程")])],1),o("div",[i._v("def fun():")]),o("div",[i._v("    print('--' * 10)")]),o("div",[i._v("    time.sleep(15)")]),o("div",[i._v("    print('--' * 10)")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 守护进程")])],1),o("div",[i._v("    p = Process(target=cal_time)")]),o("div",[i._v("    p.daemon = True  "),o("font",{attrs:{color:"#41AD1C"}},[i._v("# 开启守护进程")])],1),o("div",[i._v("    p.start()")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v(" # 其他子进程")])],1),o("div",[i._v("    p2 = Process(target=fun)")]),o("div",[i._v("    p2.start()")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[i._v("# 主进程代码")])],1),o("div",[i._v("    for i in range(100):")]),o("div",[i._v("        time.sleep(0.1)")]),o("div",[i._v("        print('*' * i)")]),o("div",[i._v("    p2.join()  "),o("font",{attrs:{color:"#41AD1C"}},[i._v("# 如果守护进程想等待其他进程结束后再结束，可以使用join")])],1)]),o("div",[o("br")])]),o("div",[o("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt","white-space":"pre-wrap",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.75"}},[i._v("6.")]),o("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),o("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[i._v("进程的其他方法")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v(".is_alive() -> 判断进程是否存活 -> 返回值: True: 进程没有结束 False 进程以结束")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("import time")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fun():")]),o("div",[i._v("    print('---子进程---')")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = Process(target=fun)")]),o("div",[i._v("    p.start()")]),o("div",[i._v("    print(p.is_alive())  # True")]),o("div",[i._v("    time.sleep(5)")]),o("div",[i._v("    print(p.is_alive())  # False")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[i._v(".terminate() -> 手动结束进程 -> 如果调用了 terminate 进程是不会立刻结束的，terminate只是向系统发送了一条结束该进程的指令，terminate就相当于异步执行")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[i._v("import time")]),o("div",[i._v("from multiprocessing import Process")]),o("div",[o("br")]),o("div",[i._v("def fun():")]),o("div",[i._v("    print('---子进程---')")]),o("div",[o("br")]),o("div",[i._v("if __name__ == '__main__':")]),o("div",[i._v("    p = Process(target=fun)")]),o("div",[i._v("    p.start()")]),o("div",[i._v("    print(p.is_alive())  # True")]),o("div",[i._v("    p.terminate()")]),o("div",[i._v("    print(p.is_alive())  # True -> 进程是不会立刻结束的，terminate只是向系统发送了一条结束该进程的指令，terminate就相当于异步执行")]),o("div",[i._v("    time.sleep(0.1)")]),o("div",[i._v("    print(p.is_alive())  # False")])]),o("div",[o("br")])]),o("div",[o("br")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);