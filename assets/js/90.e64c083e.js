(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{445:function(o,t,v){"use strict";v.r(t);var i=v(25),r=Object(i.a)({},(function(){var o=this,t=o.$createElement,v=o._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[v("div",[v("span",[v("div",[v("div",[v("font",{staticStyle:{"font-size":"14pt"}},[o._v("对象代理的作用: 在获取和设置对象的时候必须经过对象代理")])],1),v("div",[v("font",{staticStyle:{"font-size":"14pt"}},[v("br")])],1),v("div",[v("span",{staticStyle:{"font-size":"18.6667px"}},[o._v("对象代理中get和set方法的说明")])]),v("ul",[v("li",[v("div",[v("span",{staticStyle:{"font-size":"18.6667px"}},[o._v("get: 获取对象中的值的时候会触发对象代理中的get方法")])])]),v("li",[v("div",[v("span",{staticStyle:{"font-size":"18.6667px"}},[o._v("set: 设置对象中的值的时候会触发对象代理中的set方法")])])])]),v("div",[v("span",{staticStyle:{"font-size":"18.6667px"}},[v("br")])]),v("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[v("div",[v("span",{staticStyle:{"font-family":"Monaco"}},[v("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#41AD1C"}},[o._v("// 固定写法")])],1)]),v("div",[v("span",{staticStyle:{color:"rgb(51, 51, 51)","font-family":"Monaco"}},[v("font",{staticStyle:{"font-size":"9pt"}},[v("br")])],1)]),v("div",[o._v("new Proxy(obj, {")]),v("div",[o._v("    get(obj, key){")]),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("/*")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("           obj: 代表当前代理的对象")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("           key: 代表当前要获取的对象属性名")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("        */")])],1),v("div",[o._v("        console.log('"),v("font",{attrs:{color:"#FA7A00"}},[o._v("获取属性的时候触发 : 一定要经过代理时候才能获取")]),o._v("');")],1),v("div",[o._v("    },")]),v("div",[o._v("    set(obj, key, value){")]),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("/*")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("           obj: 代表当前代理的对象")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("           key: 代表当前要设置的对象属性名")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("           value: 代表当前要设置的对象属性的值")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("        */")])],1),v("div",[o._v("        console.log('"),v("font",{attrs:{color:"#FA7A00"}},[o._v("设置属性的时候触发")]),o._v("');")],1),v("div",[o._v("    }")]),v("div",[o._v("});")])]),v("div",[v("br")]),v("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[v("div",[o._v("let agentJson = {a: '代理1', b: '代理2'};")]),v("div",[v("br")]),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("// 设置对象的代理")])],1),v("div",[o._v("let p1 = new Proxy(agentJson, {")]),v("div",[o._v("    get(obj, key) {  "),v("font",{attrs:{color:"#41AD1C"}},[o._v("// 获取值得时候触发")])],1),v("div",[v("font",{attrs:{color:"#41AD1C"}},[o._v("        // return '代理三';")])],1),v("div",[o._v("        return obj[key];")]),v("div",[o._v("    },")]),v("div",[o._v("    set(obj, key, value) {  "),v("font",{attrs:{color:"#41AD1C"}},[o._v("// 设置值得时候触发，设置值得时候一定要通过 p1. 来进行设置要不然没有效果")])],1),v("div",[o._v("        obj[key] = '代理四';")]),v("div",[o._v("    }")]),v("div",[o._v("});")]),v("div",[v("br")]),v("div",[o._v("p1.b = 10;")]),v("div",[v("br")]),v("div",[o._v("console.log(agentJson.a);  "),v("font",{attrs:{color:"#41AD1C"}},[o._v("// 代理1")])],1),v("div",[o._v("console.log(agentJson.b);  "),v("font",{attrs:{color:"#41AD1C"}},[o._v("// 代理四")])],1)]),v("div",[v("br")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);