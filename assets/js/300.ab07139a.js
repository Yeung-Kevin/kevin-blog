(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{652:function(t,i,o){"use strict";o.r(i);var e=o(25),r=Object(e.a)({},(function(){var t=this,i=t.$createElement,o=t._self._c||i;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"18.6667px"}},[t._v("IPC机制: 进程之间的通信，指两个进程之间进行数据交换")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("1.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("JoinableQueue 队列 和 Queue 队列的区别")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("生产者生产完数据后，执行 p.join() 方法，意思是等待消费者把所有数据都处理完")])])]),o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("消费者进程每次从 JoinableQueue  队列中获取值并且处理完后都要执行 q.task_done() 方法，告诉生产者进程这个数据处理完了")])])])]),o("div",[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("2.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("使用 ")]),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("JoinableQueue 队列的注意事项")])]),o("div",[o("font",{staticStyle:{"font-size":"12pt"}},[o("br")])],1),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("所有消费者进程必须设置为守护进程")])])]),o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("主进程中所有生产者进程必须执行 .join() 方法， 等待生产者进程执行完毕")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("font",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"white-space":"pre-wrap","font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("3.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}}),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("使用 JoinableQueue 队列的执行顺序：生产者生产的数据全部被消费完 -> 生产者进程结束 -> 主进程代码执行结束 -> 消费者守护进程结束")])])],1),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("import time")]),o("div",[t._v("import random")]),o("div",[t._v("from multiprocessing import Process")]),o("div",[t._v("from multiprocessing import JoinableQueue")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 生产者")])],1),o("div",[t._v("def producer(q, food):")]),o("div",[t._v("    for i in range(5):")]),o("div",[t._v("        q.put('%s-%s' % (i, food))")]),o("div",[t._v("    q.join() "),o("font",{attrs:{color:"#E30000"}},[t._v(" # 等待 消费者进程 把所有的数据处理完")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 消费者")])],1),o("div",[t._v("def consumer(q, name):")]),o("div",[t._v("    while True:")]),o("div",[t._v("        time.sleep(random.random())")]),o("div",[t._v("        food = q.get()")]),o("div",[t._v("        print('%s,吃了%s' % (name, food))")]),o("div",[t._v("        q.task_done()  "),o("font",{attrs:{color:"#E30000"}},[t._v("# 告诉生产者进程我处理完了这一个数据")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("if __name__ == '__main__':")]),o("div",[t._v("    q = JoinableQueue()")]),o("div"),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 生产者进程")])],1),o("div",[t._v("    p1 = Process(target=producer, args=(q, '苹果'))")]),o("div",[t._v("    p1.start()")]),o("div",[t._v("    p2 = Process(target=producer, args=(q, '西瓜'))")]),o("div",[t._v("    p2.start()")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 消费者进程 ->")]),t._v(" "),o("font",{attrs:{color:"#E30000"}},[t._v("所有的消费者进程都要开启守护进程，当主进程的代码执行结束后，消费者进程也随之结束，里面的循环也不会被执行")])],1),o("div",[t._v("    c1 = Process(target=consumer, args=(q, 'Kevin'))")]),o("div",[t._v("    c1.daemon = True")]),o("div",[t._v("    c1.start()")]),o("div",[t._v("    c2 = Process(target=consumer, args=(q, 'Yeung'))")]),o("div",[t._v("    c2.daemon = True")]),o("div",[t._v("    c2.start()")]),o("div",[t._v("    c3 = Process(target=consumer, args=(q, 'Aimer'))")]),o("div",[t._v("    c3.daemon = True")]),o("div",[t._v("    c3.start()")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#E30000"}},[t._v("# 主进程中所有的生产者进程都要执行 .join 方法，等待 xxx 生产者进程结束")])],1),o("div",[t._v("    p1.join() "),o("font",{attrs:{color:"#E30000"}},[t._v(" # 等待 p1 生产者进程结束")])],1),o("div",[t._v("    p2.join() "),o("font",{attrs:{color:"#E30000"}},[t._v(" # 等待 p2 生产者进程结束")])],1)]),o("div",[o("br")])]),o("div",[o("font",{staticStyle:{"font-size":"9pt"}},[o("br")])],1)])])])}),[],!1,null,null,null);i.default=r.exports}}]);