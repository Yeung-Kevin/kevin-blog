(window.webpackJsonp=window.webpackJsonp||[]).push([[315],{667:function(t,i,o){"use strict";o.r(i);var e=o(25),r=Object(e.a)({},(function(){var t=this,i=t.$createElement,o=t._self._c||i;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("1.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("@property ")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("-> 将类方法伪装成类属性")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("一般定义为属性的都是名词，方法的都是动词，但是有些情况方法名为名词且有想在外部以属性的形式调用，这时候就要使用 @property 装饰器")])])])]),o("div",[o("font",{staticStyle:{"font-size":"14pt"}},[o("br")])],1),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("from math import pi")]),o("div",[o("br")]),o("div",[t._v("class Circle:")]),o("div",[t._v("    def __init__(self, r):")]),o("div",[t._v("        self.r = r")]),o("div",[o("br")]),o("div",[t._v("    @property")]),o("div",[t._v("    def perimeter(self):")]),o("div",[t._v("        return 2 * pi * self.r")]),o("div",[o("br")]),o("div",[t._v("    @property")]),o("div",[t._v("    def area(self):")]),o("div",[t._v("        return self.r ** 2 * pi")]),o("div",[o("br")]),o("div",[t._v("c = Circle(5)")]),o("div",[t._v("print(c.perimeter)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 查看伪装属性")])],1),o("div",[t._v("print(c.area)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 查看伪装属性")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[t._v("@方法名.setter 伪修改属性（伪装属性的传值）")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("如果设置了该装饰器那么就会先执行该装饰器然后再执行被@property所被装饰的函数里面的代码")])])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("from math import pi")]),o("div",[o("br")]),o("div",[t._v("class CAttr:")]),o("div",[t._v("    def __init__(self, num):")]),o("div",[t._v("        self.__num = num")]),o("div",[o("br")]),o("div",[t._v("    @property  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 伪装成类属性")])],1),o("div",[t._v("    def num(self):")]),o("div",[t._v("        return self.__num + 10")]),o("div",[o("br")]),o("div",[t._v("    @num.setter  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 伪装属性的传值")])],1),o("div",[t._v("    def num(self, new_num):")]),o("div",[t._v("        self.__num = new_num")]),o("div",[o("br")]),o("div",[t._v("c = CAttr(5)")]),o("div",[t._v("print(c.num)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 15")])],1),o("div",[t._v("c.num = 20")]),o("div",[t._v("print(c.num) "),o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 30  先执行被@方法名.setter所装饰的函数，然后再执行被@property所被装饰的函数")])],1)]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("@方法名.deleter 伪删除属性")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("遇见了 del 只是执行被 @方法名.deleter 所装饰的函数里面的代码，不是删除伪装属性")])])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("from math import pi")]),o("div",[o("br")]),o("div",[t._v("class CAttr:")]),o("div",[t._v("    def __init__(self, num):")]),o("div",[t._v("        self.__num = num")]),o("div",[o("br")]),o("div",[t._v("    @property  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 伪装成类属性")])],1),o("div",[t._v("    def num(self):")]),o("div",[t._v("        return self.__num + 10")]),o("div",[o("br")]),o("div",[t._v("    @num.deleter")]),o("div",[t._v("    def num(self):")]),o("div",[t._v("        del self.__num")]),o("div",[o("br")]),o("div",[t._v("c = CAttr(5)")]),o("div",[t._v("print(c.num) "),o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 15")])],1),o("div",[t._v("del c.num  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 遇见了 del 只是执行被 @方法名.deleter 所装饰的函数里面的代码，不是删除伪装属性")])],1),o("div",[t._v("print(c.num)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 没有该属性报错")])],1)]),o("div",[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("2.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("@")]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("classmethod -> 类方法")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类方法和方法要去分开，可以直接被类调用的方法才叫类方法")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("把一个方法变成一个类中的方法，这个方法就直接可以被类调用（类名.方法名()），不需要依托任何对象")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(255, 0, 0)"}},[t._v("如果使用了 @classmethod 装饰器，那么被装饰的函数的第一个参数默认是 cls 代表的当前类")])])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("cls 和 self 的区别: ")]),o("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("cls表示当前这个类的本身，")]),o("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("self表示一个具体的实例本身")]),o("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("（即: 实例化出来的对象 等同于 self）")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("类和对象都可以调用"),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("方法，但是不建议通过对象去调用")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("class Goods:")]),o("div",[t._v("    __discount = 0.8  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 折扣")])],1),o("div",[o("br")]),o("div",[t._v("    def __init__(self, name, price):")]),o("div",[t._v("        self.name = name")]),o("div",[t._v("        self.__price = price  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 原价")])],1),o("div",[o("br")]),o("div",[t._v("    @property")]),o("div",[t._v("    def price(self):")]),o("div",[t._v("        return self.__price * Goods.__discount  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 折后价")])],1),o("div",[o("br")]),o("div",[t._v("    @classmethod  "),o("font",{attrs:{color:"#FF0000"}},[t._v("# 把一个方法变成一个类中的方法，这个方法就直接可以被类调用，不需要依托任何对象")])],1),o("div",[t._v("    def change_discount(cls, discount):")]),o("div",[o("font",{attrs:{color:"#FF0000"}},[t._v(" # cls 代表当前类")])],1),o("div",[t._v("        cls.__discount = discount")]),o("div",[o("br")]),o("div",[t._v("apple = Goods('苹果', 5)")]),o("div",[t._v("orange = Goods('橙子', 10)")]),o("div",[t._v("print(apple.price)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 4.0 折后价")])],1),o("div",[t._v("print(orange.price)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 8.0 折后价")])],1),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#FF0000"}},[t._v("# apple.change_discount(0.5) 不应该以对象的的形式调用该方法，虽然可以这样使用但是不符合，因为 discount 是静态属性（公共属性）所以应该使用 @classmethod 装饰器将 change_discount 方法变成类的方法以 Goods.change_discount(0.5) 形式调用才符合")])],1),o("div",[o("br")]),o("div",[t._v("Goods.change_discount(0.5)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 直接通过 类.方法名 调用类方法")])],1),o("div",[o("br")]),o("div",[t._v("print(apple.price)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 2.5")])],1),o("div",[t._v("print(orange.price)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 5.0")])],1)]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-family":'"Courier New"',"font-weight":"bold","line-height":"1.75"}},[t._v("3.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("@")]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("staticmethod -> 静态方法")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("如果一个函数和类没有关系，也和对象没有关系，且又要定义在类中可以被类直接调用，那么就用staticmethod将这个函数变成一个静态方法")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("静态方法没有默认参数就像函数一样")])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("类和对象都可以调用静态"),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("方法，但是不建议通过对象去调用")])])])]),o("div",[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("class Login:")]),o("div",[t._v("    def __init__(self, name, pwd):")]),o("div",[t._v("        self.name = name")]),o("div",[t._v("        self.pwd = pwd")]),o("div",[o("br")]),o("div",[t._v("    def login(self): pass")]),o("div",[o("br")]),o("div",[t._v("    @staticmethod  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 设置静态方法")])],1),o("div",[t._v("    def get_usr_pwd():")]),o("div",[t._v("        usr = input('用户名：')")]),o("div",[t._v("        pwd = input('密码：')")]),o("div",[t._v("        Login(usr, pwd)")]),o("div",[o("br")]),o("div",[t._v("Login.get_usr_pwd()  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 调用静态方法")])],1)]),o("div",[o("br")]),o("div",[o("br")])])])])}),[],!1,null,null,null);i.default=r.exports}}]);