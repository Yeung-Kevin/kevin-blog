(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{548:function(t,n,o){"use strict";o.r(n);var i=o(25),e=Object(i.a)({},(function(){var t=this,n=t.$createElement,o=t._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v(" IO (Input/Output，输入/输出)即数据的读取（接收）或写入（发送）操作，通常用户进程中的一个完整IO分为两阶段：用户进程空间 --\x3e 内核空间、内核空间--\x3e设备空间（磁盘、网络等）。IO有内存IO、网络IO和磁盘IO三种，通常我们说的IO指的是后两者。")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("通俗理解：让CPU等待的就是IO，而输入/输出就是一个等待的过程，也可以将IO理解为就是阻塞")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])])]),o("div",[o("span",{staticStyle:{"font-size":"18.6667px"}},[o("span",{staticStyle:{"font-size":"18.6667px","font-weight":"bold"}},[t._v("IO模型就是为了说明协程遇到IO操作切换执行另一个函数，当IO执行完后是如何切换回来执行原来的函数的")])])]),o("div",[o("font",{staticStyle:{"font-size":"14pt"}},[o("br")])],1),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("5种IO模型:")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("阻塞IO ")])]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("->")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}})]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("blocking IO -> 工作效率低")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("非阻塞IO")]),t._v(" "),o("span",{staticStyle:{"font-size":"16px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("-> ")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("nonblocking IO -> 工作效率高，CPU负担大 -> 不建议使用")])])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("IO多路复用")])]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}}),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("-> ")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("IO multiplexing -> ")]),t._v("在有多个对象需要IO阻塞的时候，能够有效的减少阻塞带来的时间损耗，且能够在一定程度上减少CPU的负担")])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("异步IO")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}}),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("-> ")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("asynchronous IO")])]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v(" -> 工作效率高，CPU负担少，无法直接通过代码实现，只能借助操作系统一些机制/接口或Python的内置模块实现，")]),t._v("asyncio是Python的内置异步IO模块，通过它就能实现异步IO")])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("信号驱动IO")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}}),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("-> ")]),o("span",{staticStyle:{"letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("signal driven IO -> 并不常用")])])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("1.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("阻塞IO")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("img",{attrs:{"data-filename":"阻塞IO.png",src:"/kevin-blog/Python/IO模型_files/阻塞IO.png",type:"image/png",width:"784"}})]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t._v("# 平时我们写代码遇到的就是IO阻塞，如 recv")])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("2.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("非")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("阻塞IO")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("img",{attrs:{"data-filename":"非阻塞IO.png",src:"/kevin-blog/Python/IO模型_files/非阻塞IO.png",type:"image/png",width:"777"}})]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(51, 51, 51)"}},[t._v("通过代码实现非阻塞IO")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t._v("# server.py")])]),o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[o("br")])]),o("div",[t._v("import socket")]),o("div",[o("br")]),o("div",[t._v("sk = socket.socket()")]),o("div",[t._v("sk.bind(('127.0.0.1', 8080))")]),o("div",[t._v("sk.listen()")]),o("div",[t._v("sk.setblocking(False)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 将socket设置为非阻塞模式")])],1),o("div",[o("br")]),o("div",[t._v("conn_lis = []")]),o("div",[t._v("while True:")]),o("div",[t._v("    try:")]),o("div",[t._v("        conn, addr = sk.accept()")]),o("div",[t._v("        conn_lis.append(conn)")]),o("div",[t._v("    except BlockingIOError:")]),o("div",[t._v("        del_lis = []")]),o("div",[t._v("        for c in conn_lis:")]),o("div",[t._v("            try:")]),o("div",[t._v("                msg = c.recv(10).decode('utf-8')")]),o("div",[t._v("                if not msg:")]),o("div",[t._v("                    c.close()")]),o("div",[t._v("                    del_lis.append(c)")]),o("div",[t._v("                else:")]),o("div",[t._v("                    print(msg)")]),o("div",[t._v("                    c.send(msg.upper().encode('utf-8'))")]),o("div",[t._v("            except BlockingIOError:")]),o("div",[t._v("                pass")]),o("div",[t._v("        if del_lis:")]),o("div",[t._v("            for del_item in del_lis:")]),o("div",[t._v("                conn_lis.remove(del_item)")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t._v("# client.py")])]),o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[o("br")])]),o("div",[t._v("import socket")]),o("div",[t._v("import time")]),o("div",[t._v("from threading import Thread")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("def fun():")]),o("div",[t._v("    sk = socket.socket()")]),o("div",[t._v("    sk.connect(('127.0.0.1', 8080))")]),o("div",[t._v("    time.sleep(1)")]),o("div",[t._v("    sk.send(b'hello')")]),o("div",[t._v("    print(sk.recv(10).decode('utf-8'))")]),o("div",[t._v("    sk.close()")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("for i in range(10):")]),o("div",[t._v("    Thread(target=fun).start()")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("3.")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("IO多路复用")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("img",{attrs:{"data-filename":"IO多路复用.png",src:"/kevin-blog/Python/IO模型_files/IO多路复用.png",type:"image/png",width:"781"}})]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("如果只有一个IO阻塞的时候就不建议使用IO多路复用，直接使用IO阻塞就可以了，因为IO多路复用只有在有多个对象需要IO阻塞的时候使用，只有一个IO阻塞的时候使用IO多路复用反而会降低了执行效率（因为IO多路复用执行的过程中中间还多了一个通知用户态的过程）")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt",color:"rgb(51, 51, 51)"}},[t._v("使用select模块实现IO多路复用")])])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[t._v("# server.py")])]),o("div",[o("br")]),o("div",[t._v("import socket")]),o("div",[t._v("import select")]),o("div",[o("br")]),o("div",[t._v("sk = socket.socket()")]),o("div",[t._v("sk.bind(('127.0.0.1', 8080))")]),o("div",[t._v("sk.listen()")]),o("div",[o("br")]),o("div",[t._v("read_lst = [sk]  # 输入列表")]),o("div",[t._v("while True:")]),o("div",[t._v("    rl, wl, xl = select.select(read_lst, [], [])  "),o("font",{attrs:{color:"#E30000"}},[t._v("# 监听输入列表中sk或多个conn是否有用户进行连接（是否有数据返回），如果有就会")]),o("b",[o("font",{attrs:{color:"#AD0000"}},[t._v("返回一个列表中包含 以被用户连接的sk 或 多个得到数据的conn对象")])],1),t._v(" "),o("font",{attrs:{color:"#E30000"}},[t._v("（因为有多个客户端对服务端进行连接，所以才会有多个conn对象）")])],1),o("div",[t._v("    for item in rl: "),o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 循环select的返回值中的输入列表，因为里面包含了 以被用户连接的sk 或 多个得到数据的conn对象（因为有多个客户端对服务端进行连接，所以才会有多个conn对象）")])],1),o("div",[t._v("        if item == sk:  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 判断是否是sk对象（因为sk对象只会有一个，并且是同一个），如果等于sk对象那么就代表有新的客户端对服务端进行连接")])],1),o("div",[t._v("            conn, addr = item.accept() "),o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 得到一个conn客户端对象")])],1),o("div",[t._v("            read_lst.append(conn)  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 将 与服务端进行链接了的客户端对象放入 read_lst 输入列表中")])],1),o("div",[t._v("        else: "),o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 如果不是sk对象就是conn对象")])],1),o("div",[t._v("            ret = item.recv(1024).decode('utf-8')")]),o("div",[t._v("            if not ret:  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 判断接收到的消息是否为空，如果是就说明客户端已经断开连接这样就关闭该客户端并且从read_lst输入列表中删除，如果不为空就打印该数据并且向客户端回一条消息")])],1),o("div",[t._v("                item.close()")]),o("div",[t._v("                read_lst.remove(item)")]),o("div",[t._v("            else:")]),o("div",[t._v("                print(ret)")]),o("div",[t._v("                item.send(ret.upper().encode('utf-8'))")])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[t._v("# client.py")]),o("div",[o("br")]),o("div",[t._v("import socket")]),o("div",[t._v("import time")]),o("div",[t._v("from threading import Thread")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("def fun():")]),o("div",[t._v("    sk = socket.socket()")]),o("div",[t._v("    sk.connect(('127.0.0.1', 8080))")]),o("div",[t._v("    for i in range(10):")]),o("div",[t._v("        time.sleep(2)")]),o("div",[t._v("        sk.send(b'hello')")]),o("div",[t._v("        print(sk.recv(1024))")]),o("div",[t._v("    sk.close()")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("for i in range(10):")]),o("div",[t._v("    Thread(target=fun).start()")])]),o("div",[o("br")])]),o("div",[o("br")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);