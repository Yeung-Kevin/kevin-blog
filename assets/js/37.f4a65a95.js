(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{390:function(t,e,r){"use strict";r.r(e);var i=r(25),s=Object(i.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("div",[r("span",[r("div",[r("div",[r("div",[r("span",{staticStyle:{"font-family":'"Helvetica Neue"'}},[r("br")])]),r("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[r("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("权限组件")])]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[t._v("只要继承了 APIView 就可以使用权限组件")])]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[t._v("组件的")]),r("span",{staticStyle:{"font-size":"14pt"}},[t._v("执行顺序: ")]),t._v(" "),r("span",{staticStyle:{"font-size":"14pt"}},[t._v("认证 ->")]),t._v(" "),r("span",{staticStyle:{"font-size":"14pt",color:"rgb(255, 0, 0)"}},[t._v("权限")]),t._v(" "),r("span",{staticStyle:{"font-size":"14pt"}},[t._v("-> 频率")])]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("1.")]),r("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 权限类的创建")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("ul",[r("li",[r("div",[t._v("权限类的固定写法一 -> 没有继承 BasePermission 权限类")])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[t._v("如果没有继承 BasePermission 权限类，那么就需要在权限类中编写两个方法")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("ul",[r("li",[r("div",[t._v("has_permission -> 编写权限的逻辑代码")])]),r("li",[r("div",[t._v("has_object_permission -> 不知道有啥用，反正就是要写上 rest-framework 的源码规定的，否则就会报错 ")])])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[r("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("注意")]),t._v(":")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("ul",[r("li",[r("div",[r("span",{staticStyle:{"font-weight":"bold"}},[t._v("has_permission 方法必须返回")]),r("span",{staticStyle:{color:"rgb(250, 122, 0)","font-weight":"bold"}},[t._v("True（也可以是能代表True的元素，即: 字符串、列表、字典等）")]),r("span",{staticStyle:{"font-weight":"bold"}},[t._v("或则")]),r("span",{staticStyle:{color:"rgb(250, 122, 0)","font-weight":"bold"}},[t._v("False（也可以是能代表True的元素，即: 0、None等）")]),r("span",{staticStyle:{"font-weight":"bold"}},[t._v("，因为是 rest-framework 的源码规定的")])])])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_permission.py")])],1),r("div",[r("br")]),r("div",[t._v("class "),r("font",{attrs:{color:"#FA7A00"}},[t._v("权限类的类名")]),t._v("(object):")],1),r("div",[r("br")]),r("div",[t._v("    message = "),r("font",{attrs:{color:"#FA7A00"}},[t._v("'错误信息'")]),t._v(" "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 配置错误信息，如果不配置会使用默认的错误信息")])],1),r("div",[r("br")]),r("div",[t._v("    def has_permission(self, request, view):")]),r("div",[r("br")]),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v(" # 权限的逻辑代码")])],1),r("div",[r("br")]),r("div",[t._v("        if "),r("font",{attrs:{color:"#FA7A00"}},[t._v("True / False")]),t._v(":")],1),r("div",[t._v("            return "),r("font",{attrs:{color:"#FA7A00"}},[t._v("True")])],1),r("div",[t._v("        else:")]),r("div",[t._v("            return "),r("font",{attrs:{color:"#FA7A00"}},[t._v("False")])],1),r("div",[r("br")]),r("div",[t._v("    def has_object_permission(self, request, view, obj):")]),r("div",[r("br")]),r("div",[t._v("        return True")])]),r("div",[r("br")]),r("ul",[r("li",[r("div",[t._v("权限类的固定写法二 -> 继承 BasePermission 权限类 -> "),r("span",{staticStyle:{color:"rgb(255, 0, 0)"}},[t._v("常用")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[t._v("BasePermission 权限类其实就是一个初始化好的权限类")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[t._v("BasePermission 权限类里面也有 has_permission "),r("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("和 ")]),t._v("has_object_permission 方法，只不过这两个方法里面没有任何逻辑代码")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[t._v("在编写权限类的时候可以继承 BasePermission 权限类，然后重写 has_permission "),r("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("方法，而自己编写的权限类就无需写 ")]),t._v("has_object_permission 方法了，因为 BasePermission 权限类里面有")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("li",[r("div",[r("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("注意")]),t._v(":")])])])]),r("div",[r("br")]),r("ul",[r("ul",[r("ul",[r("li",[r("div",[r("span",{staticStyle:{"font-weight":"bold"}},[t._v("has_permission 方法必须返回")]),r("span",{staticStyle:{color:"rgb(250, 122, 0)","font-weight":"bold"}},[t._v("True（也可以是能代表True的元素，即: 字符串、列表、字典等）")]),r("span",{staticStyle:{"font-weight":"bold"}},[t._v("或则")]),r("span",{staticStyle:{color:"rgb(250, 122, 0)","font-weight":"bold"}},[t._v("False（也可以是能代表True的元素，即: 0、None等）")]),r("span",{staticStyle:{"font-weight":"bold"}},[t._v("，因为是 rest-framework 的源码规定的")])])])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_permission.py")])],1),r("div",[r("br")]),r("div",[t._v("from rest_framework.permissions import BasePermission")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class "),r("font",{attrs:{color:"#FA7A00"}},[t._v("权限类的类名")]),t._v("(BasePermission):")],1),r("div",[r("br")]),r("div",[t._v("    message = "),r("font",{attrs:{color:"#FA7A00"}},[t._v("'错误信息'")]),t._v(" "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 配置错误信息，如果不配置会使用默认的错误信息")])],1),r("div",[r("br")]),r("div",[t._v("    def has_permission(self, request, view):")]),r("div",[r("br")]),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v(" # 权限的逻辑代码")])],1),r("div",[r("br")]),r("div",[t._v("        if "),r("font",{attrs:{color:"#FA7A00"}},[t._v("True / False")]),t._v(":")],1),r("div",[t._v("            return "),r("font",{attrs:{color:"#FA7A00"}},[t._v("True")])],1),r("div",[t._v("        else:")]),r("div",[t._v("            return "),r("font",{attrs:{color:"#FA7A00"}},[t._v("False")])],1)]),r("div",[r("br")]),r("ul",[r("li",[r("div",[t._v("权限类的例子")])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_permission.py")])],1),r("div",[r("span",{staticStyle:{"font-size":"9pt",color:"rgb(51, 51, 51)","font-family":"Monaco"}},[r("br")])]),r("div",[t._v("from rest_framework.permissions import BasePermission")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class SVIPPermission(BasePermission):")]),r("div",[r("br")]),r("div",[t._v('    message = "SVIP才能访问!"  '),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 配置错误信息，如果不配置会使用默认的错误信息")])],1),r("div",[r("br")]),r("div",[t._v("    def has_permission(self, request, view):")]),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v(' """')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("        :param request: APIView 的 request")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("        :param view: 视图类的实例化对象 -> APIView 类中的 self")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("        :return: True/False")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v('        """')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[r("br")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("        # request.user / request.auth 可以使用是因为先执行了认证类然后再执行权限类，且在执行认证类的authenticate方法的时候已经把返回值分别赋值给 request.user / request.auth")])],1),r("div",[r("br")]),r("div",[t._v("        if request.user.user_type == 3:")]),r("div",[t._v("            print(request.user)  "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 用户的数据对象")])],1),r("div",[t._v("            print(request.auth)  "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# token: 7a06fa70c1516f8cd9399e17285d9903")])],1),r("div",[t._v("            return True")]),r("div",[t._v("        else:")]),r("div",[t._v("            return False")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])])]),r("div",[r("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("2.")]),r("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 局部权限")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("ul",[r("li",[r("div",[t._v("局部权限的配置（即: permission_classes "),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("= [")]),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("权限")]),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("类,")]),t._v(" "),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("权限")]),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("类]")]),t._v("）会覆盖掉该视图类在全局权限中的配置")])])]),r("div",[r("br")]),r("ul",[r("li",[r("div",[t._v("permission_classes"),r("span",{staticStyle:{color:"rgb(250, 122, 0)"}}),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("= [权限类, 权限类]")])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# rf_permission.py")])]),r("div",[r("br")]),r("div",[t._v("from rest_framework.permissions import BasePermission")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class SVIPPermission(BasePermission):")]),r("div",[r("br")]),r("div",[t._v('    message = "SVIP才能访问!"  '),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 配置错误信息，如果不配置会使用默认的错误信息")])]),r("div",[r("br")]),r("div",[t._v("    def has_permission(self, request, view):")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v(' """')])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param request: APIView 的 request")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param view: 视图类的实例化对象 -> APIView 类中的 self")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :return: True/False")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v('        """')])]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        # request.user / request.auth 可以使用是因为先执行了认证类然后再执行权限类，且在执行认证类的authenticate方法的时候已经把返回值分别赋值给 request.user / request.auth")])]),r("div",[r("br")]),r("div",[t._v("        if request.user.user_type == 3:")]),r("div",[t._v("            print(request.user)  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 用户的数据对象")])]),r("div",[t._v("            print(request.auth)  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# token: 7a06fa70c1516f8cd9399e17285d9903")])]),r("div",[t._v("            return True")]),r("div",[t._v("        else:")]),r("div",[t._v("            return False")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# views.py")])],1),r("div",[r("br")]),r("div",[t._v("from .models import *")]),r("div",[t._v("from .serializer import *")]),r("div",[t._v("from .rf_auth import *")]),r("div",[t._v("from .rf_permission import *")]),r("div",[r("br")]),r("div",[t._v("from rest_framework import viewsets")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class BookViewSet(viewsets.ModelViewSet):")]),r("div",[t._v("    authentication_classes = [TokenAuth]  "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 局部认证，只作用于当前视图")])],1),r("div",[r("font",{staticStyle:{color:"rgb(250, 122, 0)"}},[t._v("permission_classes")]),t._v(" = [SVIPPermission]  "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 局部权限，只作用于当前视图")])],1),r("div",[r("br")]),r("div",[t._v("    queryset = Book.objects.all()")]),r("div",[t._v("    serializer_class = BookSerializers")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("3.")]),r("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 全局权限")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("ul",[r("li",[r("div",[r("span",{staticStyle:{"font-size":"12pt"}},[t._v("全局权限作用于所有视图类")])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# rf_permission.py")])]),r("div",[r("br")]),r("div",[t._v("from rest_framework.permissions import BasePermission")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class SVIPPermission(BasePermission):")]),r("div",[r("br")]),r("div",[t._v('    message = "SVIP才能访问!"  '),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 配置错误信息，如果不配置会使用默认的错误信息")])]),r("div",[r("br")]),r("div",[t._v("    def has_permission(self, request, view):")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v(' """')])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param request: APIView 的 request")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param view: 视图类的实例化对象 -> APIView 类中的 self")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :return: True/False")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v('        """')])]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        # request.user / request.auth 可以使用是因为先执行了认证类然后再执行权限类，且在执行认证类的authenticate方法的时候已经把返回值分别赋值给 request.user / request.auth")])]),r("div",[r("br")]),r("div",[t._v("        if request.user.user_type == 3:")]),r("div",[t._v("            print(request.user)  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 用户的数据对象")])]),r("div",[t._v("            print(request.auth)  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# token: 7a06fa70c1516f8cd9399e17285d9903")])]),r("div",[t._v("            return True")]),r("div",[t._v("        else:")]),r("div",[t._v("            return False")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# settings.py")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[r("br")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v("# 配置全局权限所需要的权限类的路径")])],1),r("div",[t._v("REST_FRAMEWORK = {")]),r("div",[r("font",{attrs:{color:"#41AD1C"}},[t._v('# "DEFAULT_AUTHENTICATION_CLASSES": ["app01.rf_auth.TokenAuth"],  # 全局认证')])],1),r("div",[t._v('    "DEFAULT_PERMISSION_CLASSES": ["app01.rf_permission.SVIPPermission"]  '),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 全局权限")])],1),r("div",[t._v("}")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt"}},[r("br")])]),r("ul",[r("li",[r("div",[r("span",{staticStyle:{"font-size":"12pt"}},[t._v("不进行权限认证的视图类设置")])])])]),r("div",[r("font",{staticStyle:{"font-size":"12pt"}},[r("br")])],1),r("ul",[r("ul",[r("li",[r("div",[r("span",{staticStyle:{"font-size":"12pt"}},[t._v("如果设置了全局权限，但是又想某些视图不进行权限认证，那么可以在不想进行权限认证的视图类中设置")]),t._v(" permission_classes"),r("span",{staticStyle:{color:"rgb(250, 122, 0)"}}),r("span",{staticStyle:{"font-size":"12pt"}},[t._v("= []，因为在 rest-framework 源码中 局部权限的配置 会覆盖掉 全局权限的配置")])])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# views.py")])]),r("div",[r("br")]),r("div",[t._v("import hashlib")]),r("div",[t._v("import time")]),r("div",[r("br")]),r("div",[t._v("from django.shortcuts import render, HttpResponse")]),r("div",[t._v("from rest_framework.views import APIView")]),r("div",[t._v("from rest_framework.response import Response")]),r("div",[t._v("from .models import *")]),r("div",[t._v("from .serializer import *")]),r("div",[t._v("from .rf_auth import *")]),r("div",[r("br")]),r("div",[t._v("from rest_framework import viewsets")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class BookViewSet(viewsets.ModelViewSet):")]),r("div",[t._v("    queryset = Book.objects.all()")]),r("div",[t._v("    serializer_class = BookSerializers")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[t._v("class PublishViewSet(viewsets.ModelViewSet):")]),r("div",[t._v("    queryset = Publish.objects.all()")]),r("div",[t._v("    serializer_class = PublishSerializers")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 获取以用户名作为盐，以当前时间作为加密内容的字符串token")])]),r("div",[t._v("def get_token_str(username):")]),r("div",[t._v("    now_time = str(time.time())")]),r("div",[t._v('    md5 = hashlib.md5(bytes(username, encoding="utf8"))  '),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 加盐，使用用户名作为盐，保证token的唯一性")])]),r("div",[t._v("    md5.update(bytes(now_time, encoding='utf-8'))")]),r("div",[t._v("    return md5.hexdigest()")]),r("div",[r("br")]),r("div",[r("br")]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 登陆，并且返回当前用户的token")])]),r("div",[t._v("class LoginView(APIView):")]),r("div",[r("font",{attrs:{color:"#FA7A00"}},[t._v("permission_classes = []")]),t._v(" "),r("font",{attrs:{color:"#41AD1C"}},[t._v("# 在全局权限下，当前视图不进行权限认证")])],1),r("div",[r("br")]),r("div",[t._v("    def post(self, request):")]),r("div",[t._v("        username = request.data.get('username')")]),r("div",[t._v("        password = request.data.get('password')")]),r("div",[t._v("        user = User.objects.filter(username=username, password=password).first()")]),r("div",[t._v("        ret = {")]),r("div",[t._v("            'status': 0,")]),r("div",[t._v("            'msg': None")]),r("div",[t._v("        }")]),r("div",[t._v("        if user:")]),r("div",[t._v("            token_str = get_token_str(user.username)  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 获取Token值")])]),r("div",[r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 每次登陆成功后都要修改当前用户的token值")])]),r("div",[t._v("            Token.objects.update_or_create(user=user, defaults={'token': token_str})  "),r("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 如果有 user=user 这条数据，那么就修改 token 值，否则就进行添加")])]),r("div",[t._v("            ret['status'] = 1")]),r("div",[t._v("            ret['token'] = token_str")]),r("div",[t._v("        else:")]),r("div",[t._v("            ret['msg'] = '登陆失败'")]),r("div",[r("br")]),r("div",[t._v("        return Response(ret)")])]),r("div",[r("span",{staticStyle:{"font-size":"14pt","font-family":'"Helvetica Neue"'}},[r("br")])])]),r("div",[r("br")]),r("div",[r("br")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);