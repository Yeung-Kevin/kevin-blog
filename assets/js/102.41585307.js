(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{457:function(o,t,r){"use strict";r.r(t);var s=r(25),i=Object(s.a)({},(function(){var o=this,t=o.$createElement,r=o._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[r("div",[r("span",[r("div",[r("ul",[r("li",[r("div",[o._v("flask 示例")])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[o._v("from flask import Flask")]),r("div",[r("br")]),r("div",[o._v("app = Flask(__name__)")]),r("div",[r("br")]),r("div",[o._v("if __name__ == '__main__':")]),r("div",[o._v("    app.run()  "),r("font",{attrs:{color:"#41AD1C"}},[o._v("# 启动 Flask")])],1)]),r("div",[r("br")]),r("ul",[r("li",[r("div",[o._v("源码分析")])])]),r("div",[r("br")]),r("ol",[r("ol",[r("li",[r("div",[o._v("当请求过来执行 run 方法")])]),r("li",[r("div",[o._v("执行 __call__ 方法的到 environ 参数: 请求相关的所有数据（由wsgi做了初步的封装），start_response 参数: 用于设置响应相关数据")])]),r("li",[r("div",[o._v("执行 wsgi_api 方法")])]),r("ol",[r("li",[r("div",[o._v("获取 environ 并对其进行二次封装，得到 ctx 对象")])]),r("li",[r("div",[o._v("从 environ 中获取名称为 session 的 cookie，然后进行解密 + 返序列化，最后得到一个字典，然后赋值给 ctx.session")])]),r("li",[r("div",[o._v("将 ctx 对象放入 __storage__ 字典（即: 上下文字典）中的指定线程或协程下的 stack 列表里")])]),r("li",[r("div",[o._v("执行视图函数，返回相应的数据给浏览器")])]),r("li",[r("div",[o._v("从上下文字典中获取session，加密+序列化，最后写入 cookie 中")])]),r("li",[r("div",[o._v("清空上下文字典中对应线程的数据")])])])])]),r("div",[r("br")]),r("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[r("div",[o._v("class Flask(_PackageBoundObject):")]),r("div",[o._v("    def "),r("font",{attrs:{color:"#FA7A00"}},[o._v("run")]),o._v("(self, host=None, port=None, debug=None, load_dotenv=True, **options):")],1),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("run_simple(host, port, self, **options)")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v("run_simple(ip, 端口, 对象或方法, **options) 的说明:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                1. 启动 Flask 监听 host 所指定的 ip + port 所指定端口，如果有人访问则执行 self() 返回对应的数据给浏览器")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                2. 当 对象 + () 执行的时候就会调用它所在的类中的 __call__ 方法，所以 self() 实际上是调用了 Flask 类中的 __call__ 方法")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('        """')])],1),r("div",[r("br")]),r("div",[o._v("    def "),r("font",{attrs:{color:"#FA7A00"}},[o._v("__call__")]),o._v("(self, environ, start_response):")],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("        :param environ: 请求相关的所有数据（由wsgi做了初步的封装）")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("        :param start_response: 用于设置响应相关数据")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('        """')])],1),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("return self.wsgi_app(environ, start_response)")])],1),r("div",[r("br")]),r("div",[o._v("    def "),r("font",{attrs:{color:"#FA7A00"}},[o._v("wsgi_app")]),o._v("(self, environ, start_response):")],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v(" wsgi_app的步骤：")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                1. 获取 environ 并对其进行二次封装，得到 ctx 对象")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                2. 从 environ 中获取名称为 session 的 cookie，然后进行解密 + 返序列化，最后得到一个字典，然后赋值给 ctx.session")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                3. 将 ctx 对象放入 __storage__ 字典（即: 上下文字典）中的指定线程或协程下的 stack 列表里")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                4. 执行视图函数，返回相应的数据给浏览器")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                5. 从上下文字典中获取session，加密+序列化，最后写入 cookie 中")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                6. 清空上下文字典中对应线程的数据")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('        """')])],1),r("div",[r("br")]),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx = self.request_context(environ)")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v(' """')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx = RequestContext(self, environ) 的说明:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                1. 作用:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    对 environ 进行二次封装，得到 ctx 对象")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                1. 参数")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    self参数：其实是 app对象")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    environ参数：请求相关的原始数据")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                2. ctx 对象下的两个重要属性:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    ctx.request = app.request_class(environ)")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    ctx.session = None")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                3. ctx 对象下的两个重要方法:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    ctx.push()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    ctx.auto_pop()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('        """')])],1),r("div",[o._v("        error = None")]),r("div",[o._v("        try:")]),r("div",[o._v("            try:")]),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx.push()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx.push() 的说明:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    1. 从 environ 中获取名称为 session 的 cookie，然后进行解密 + 反序列化，最后得到一个字典，然后赋值给 ctx.session")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                        obj = app.session_interface  # app.session_interface 是 SecureCookieSessionInterface 所实例化出来的对象，且 SecureCookieSessionInterface 下有两个重要的方法 open_session 读取session，save_session 保存session")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                        ctx.session = obj.open_session()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    2. 将 ctx 对象放入 __storage__ 字典（即: 上下文字典）中的指定线程或协程下的 stack 列表里")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('                """')])],1),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("response = self.full_dispatch_request()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v("response = self.full_dispatch_request() 的说明:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                        1. 执行视图函数")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                        2. 从 __storage__ 字典（即: 上下文字典）中获取session，然后进行加密+序列化，最后写入 cookie 中")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                            obj = app.session_interface  # app.session_interface 是 SecureCookieSessionInterface 所实例化出来的对象，且 SecureCookieSessionInterface 下有两个重要的方法 open_session 读取session，save_session 保存session")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                            obj.save_session()")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('                """')])],1),r("div",[o._v("            except Exception as e:")]),r("div",[o._v("                error = e")]),r("div",[o._v("                response = self.handle_exception(e)")]),r("div",[o._v("            except:")]),r("div",[o._v("                error = sys.exc_info()[1]")]),r("div",[o._v("                raise")]),r("div",[o._v("            return response(environ, start_response)")]),r("div",[o._v("        finally:")]),r("div",[o._v("            if self.should_ignore_error(error):")]),r("div",[o._v("                error = None")]),r("div",[r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx.auto_pop(error)")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('"""')])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}}),r("font",{attrs:{color:"#FA7A00"}},[o._v("ctx.auto_pop(error) 的说明:")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v("                    清空上下文字典中对应线程或协程的数据")])],1),r("div",[r("font",{attrs:{color:"#41AD1C"}},[o._v('            """')])],1)]),r("div",[r("br")])]),r("div",[r("br")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);