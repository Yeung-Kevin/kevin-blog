(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{398:function(t,i,o){"use strict";o.r(i);var r=o(25),e=Object(r.a)({},(function(){var t=this,i=t.$createElement,o=t._self._c||i;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("span",{staticStyle:{"font-family":'"Helvetica Neue"'}},[o("br")])]),o("h2",{staticStyle:{margin:"10px 0px 12px",padding:"0px 0px 0px 15px","font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-align":"center","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[o("span",{staticStyle:{"font-size":"21px","background-color":"#3eaf7c","border-radius":"3px","text-shadow":"rgb(34, 34, 34) 1px 1px 2px","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"white","font-family":'"Helvetica Neue", Helvetica, Verdana, Arial, sans-serif',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold","line-height":"1.5"}},[t._v("频率组件")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[t._v("只要继承了 APIView 就可以使用频率组件")])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[t._v("组件的")]),o("span",{staticStyle:{"font-size":"14pt"}},[t._v("执行顺序: ")]),t._v(" "),o("span",{staticStyle:{"font-size":"14pt"}},[t._v("认证 -> 权限 -> "),o("span",{staticStyle:{"font-size":"14pt",color:"rgb(255, 0, 0)"}},[t._v("频率")])])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("1.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 频率类的固定写法")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_throttle.py")])],1),o("div",[o("br")]),o("div",[t._v("class "),o("font",{attrs:{color:"#FA7A00"}},[t._v("频率类的类名")]),t._v("(object):")],1),o("div",[o("br")]),o("div",[t._v("    def allow_request(self, request, view):")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 频率的逻辑代码")])],1),o("div",[o("br")]),o("div",[t._v("        if "),o("font",{attrs:{color:"#FA7A00"}},[t._v("True / False")]),t._v(":")],1),o("div",[t._v("            return "),o("font",{attrs:{color:"#FA7A00"}},[t._v("True")])],1),o("div",[t._v("        else:")]),o("div",[t._v("            return "),o("font",{attrs:{color:"#FA7A00"}},[t._v("False")])],1),o("div",[o("br")]),o("div",[t._v("    def wait(self):")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 钩子函数（即: 回调函数）")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        # 当超过设置的访问频率时调用（即: 当allow_request返回False时调用）")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        # 返回需要等待的时间")])],1),o("div",[o("br")]),o("div",[t._v("        return "),o("font",{attrs:{color:"#FA7A00"}},[t._v("'时间字符串'")])],1)]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("2.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 局部频率 -> 自己编写频率类")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[t._v("局部频率的配置（即: throttle_classes "),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("= [频率")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类, ")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("频率")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类]")]),t._v("）会覆盖掉该视图类在全局频率中的配置")])])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[t._v("throttle_classes "),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("= [")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("频率")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类, ")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("频率")]),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("类]")])])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# rf_throttle.py")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[o("br")])],1),o("div",[t._v("import time")]),o("div",[o("br")]),o("div",[t._v("VISIT_RECORD = {")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# '127.0.0.1:8080':[最新的时间，……，最初的时间]")])],1),o("div",[t._v("}")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class MyThrottle(object):")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v(' """')])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("    一分钟允许访问5次")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("    原理:")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        拿到用户IP地址")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        编写访问记录 {'ip地址':[最新的时间，……，最初的时间]}")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        确保用户所对应的记录列表的最新时间和最初时间的时间差 <= 规定时间")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        判断用户所对应的记录列表的长度 < 允许访问次数")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('    """')])],1),o("div",[o("br")]),o("div",[t._v("    allow_time = 60  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 时间")])],1),o("div",[t._v("    visits = 5  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 允许访问次数")])],1),o("div",[o("br")]),o("div",[t._v("    def __init__(self):")]),o("div",[t._v("        self.history_list = []")]),o("div",[o("br")]),o("div",[t._v("    def allow_request(self, request, view):")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('"""')])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        :param request: APIView 的 request")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        :param view: 视图类的实例化对象 -> APIView 类中的 self")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        :return: True/False")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('        """')])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[o("br")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 获取用户的IP地址")])],1),o("div",[t._v("        ip = request.META.get('REMOTE_ADDR', '')")]),o("div",[t._v("        if ip not in VISIT_RECORD:")]),o("div",[t._v("            VISIT_RECORD[ip] = [time.time()]")]),o("div",[t._v("        else:")]),o("div",[t._v("            history = VISIT_RECORD[ip]")]),o("div",[o("br")]),o("div",[t._v("            if len(history) <= self.visits:")]),o("div",[t._v("                history.insert(0, time.time())  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 将最新的时间添加到列表的第一位")])],1),o("div",[o("br")]),o("div",[t._v("            self.history_list = history  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 因为 history 是列表，所以 self.history_list = history 是引用关系，没有进行深度拷贝，所以下面 history.pop() 执行 self.history_list 无需重新赋值")])],1),o("div",[o("br")]),o("div",[t._v("            while time.time() - history[-1] > self.allow_time:")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v(" # 确保列表时间是允许的范围内（即: 列表的时间差不能超过60秒）")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("                # 循环计算最新的时间和最初的时间是否在60秒，如果不是删除则删除最初的时间")])],1),o("div",[t._v("                history.pop()")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 判断列表的长度有没有超过允许访问次数")])],1),o("div",[t._v("            if len(history) > self.visits:")]),o("div",[t._v("                return False")]),o("div",[o("br")]),o("div",[t._v("        return True")]),o("div",[o("br")]),o("div",[t._v("    def wait(self):")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 钩子函数（即: 回调函数）")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        # 当超过设置的访问频率时调用（即: 当allow_request返回False时调用）")])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("        # 返回值等待时间")])],1),o("div",[t._v("        return self.allow_time - (time.time() - self.history_list[-1])")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# views.py")])],1),o("div",[o("br")]),o("div",[t._v("from .models import *")]),o("div",[t._v("from .serializer import *")]),o("div",[t._v("from .rf_auth import *")]),o("div",[t._v("from .rf_permission import *")]),o("div",[t._v("from .rf_throttle import *")]),o("div",[o("br")]),o("div",[t._v("from rest_framework import viewsets")]),o("div",[t._v("from rest_framework import "),o("font",{attrs:{color:"#FA7A00"}},[t._v("exceptions")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#FA7A00"}},[t._v("# 修改频率组件的错误信息")])],1),o("div",[t._v("class MyExceptions(exceptions.Throttled):")]),o("div",[t._v("    default_detail = '连接次数过多'")]),o("div",[t._v("    extra_detail_plural = extra_detail_singular = '请在{wait}秒后访问'")]),o("div",[o("br")]),o("div",[t._v("    def __init__(self, wait=None, detail=None, code=None):")]),o("div",[t._v("        super().__init__(wait=wait, detail=detail, code=code)")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class BookViewSet(viewsets.ModelViewSet):")]),o("div",[t._v("    authentication_classes = [TokenAuth]  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 局部认证，只作用于当前视图")])],1),o("div",[t._v("    permission_classes = [SVIPPermission]  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 局部权限，只作用于当前视图")])],1),o("div",[o("font",{attrs:{color:"#FA7A00"}},[t._v("throttle_classes")]),t._v(" = [MyThrottle]  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 局部频率，只作用于当前视图")])],1),o("div",[o("br")]),o("div",[t._v("    queryset = Book.objects.all()")]),o("div",[t._v("    serializer_class = BookSerializers")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#FA7A00"}},[t._v("# 修改频率组件的错误信息")])],1),o("div",[t._v("    def throttled(self, request, wait):")]),o("div",[t._v("        raise MyExceptions(wait=wait)")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("2.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 全局频率 -> 自己编写频率类")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("全局频率作用于所有视图类")])])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_throttle.py")])],1),o("div",[o("br")]),o("div",[t._v("import time")]),o("div",[o("br")]),o("div",[t._v("VISIT_RECORD = {")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# '127.0.0.1:8080':[最新的时间，……，最初的时间]")])]),o("div",[t._v("}")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class MyThrottle(object):")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v(' """')])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("    一分钟允许访问5次")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("    原理:")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        拿到用户IP地址")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        编写访问记录 {'ip地址':[最新的时间，……，最初的时间]}")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        确保用户所对应的记录列表的最新时间和最初时间的时间差 <= 规定时间")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        判断用户所对应的记录列表的长度 < 允许访问次数")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v('    """')])]),o("div",[o("br")]),o("div",[t._v("    allow_time = 60  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 时间")])]),o("div",[t._v("    visits = 5  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 允许访问次数")])]),o("div",[o("br")]),o("div",[t._v("    def __init__(self):")]),o("div",[t._v("        self.history_list = []")]),o("div",[o("br")]),o("div",[t._v("    def allow_request(self, request, view):")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v('"""')])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param request: APIView 的 request")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :param view: 视图类的实例化对象 -> APIView 类中的 self")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        :return: True/False")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v('        """')])]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 获取用户的IP地址")])]),o("div",[t._v("        ip = request.META.get('REMOTE_ADDR', '')")]),o("div",[t._v("        if ip not in VISIT_RECORD:")]),o("div",[t._v("            VISIT_RECORD[ip] = [time.time()]")]),o("div",[t._v("        else:")]),o("div",[t._v("            history = VISIT_RECORD[ip]")]),o("div",[o("br")]),o("div",[t._v("            if len(history) <= self.visits:")]),o("div",[t._v("                history.insert(0, time.time())  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 将最新的时间添加到列表的第一位")])]),o("div",[o("br")]),o("div",[t._v("            self.history_list = history  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 因为 history 是列表，所以 self.history_list = history 是引用关系，没有进行深度拷贝，所以下面 history.pop() 执行 self.history_list 无需重新赋值")])]),o("div",[o("br")]),o("div",[t._v("            while time.time() - history[-1] > self.allow_time:")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v(" # 确保列表时间是允许的范围内（即: 列表的时间差不能超过60秒）")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("                # 循环计算最新的时间和最初的时间是否在60秒，如果不是删除则删除最初的时间")])]),o("div",[t._v("                history.pop()")]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 判断列表的长度有没有超过允许访问次数")])]),o("div",[t._v("            if len(history) > self.visits:")]),o("div",[t._v("                return False")]),o("div",[o("br")]),o("div",[t._v("        return True")]),o("div",[o("br")]),o("div",[t._v("    def wait(self):")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 钩子函数（即: 回调函数）")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        # 当超过设置的访问频率时调用（即: 当allow_request返回False时调用）")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("        # 返回值等待时间")])]),o("div",[t._v("        return self.allow_time - (time.time() - self.history_list[-1])")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# settings.py")])],1),o("div",[o("br")]),o("div",[t._v("REST_FRAMEWORK = {")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v(' # "DEFAULT_AUTHENTICATION_CLASSES": ["app01.rf_auth.TokenAuth"],  # 全局认证')])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('    # "DEFAULT_PERMISSION_CLASSES": ["app01.rf_permission.SVIPPermission"]  # 全局权限')])],1),o("div",[t._v('    "DEFAULT_THROTTLE_CLASSES": ["app01.rf_throttle.MyThrottle"]  '),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 全局频率")])],1),o("div",[t._v("}")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("不进行频率认证的视图类设置")])])])]),o("div",[o("br")]),o("ul",[o("ul",[o("li",[o("div",[o("span",{staticStyle:{"font-size":"12pt"}},[t._v("如果设置了全局频率，但是又想某些视图不进行频率认证，那么可以在不想进行频率认证的视图类中设置")]),t._v(" throttle_classes "),o("span",{staticStyle:{"font-size":"12pt"}},[t._v("= []，因为在 rest-framework 源码中 局部频率的配置 会覆盖掉 全局频率的配置")])])])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# views.py")])]),o("div",[o("br")]),o("div",[t._v("import hashlib")]),o("div",[t._v("import time")]),o("div",[o("br")]),o("div",[t._v("from django.shortcuts import render, HttpResponse")]),o("div",[t._v("from rest_framework.views import APIView")]),o("div",[t._v("from rest_framework.response import Response")]),o("div",[t._v("from .models import *")]),o("div",[t._v("from .serializer import *")]),o("div",[t._v("from .rf_auth import *")]),o("div",[o("br")]),o("div",[t._v("from rest_framework import viewsets")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class BookViewSet(viewsets.ModelViewSet):")]),o("div",[t._v("    queryset = Book.objects.all()")]),o("div",[t._v("    serializer_class = BookSerializers")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class PublishViewSet(viewsets.ModelViewSet):")]),o("div",[t._v("    queryset = Publish.objects.all()")]),o("div",[t._v("    serializer_class = PublishSerializers")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 获取以用户名作为盐，以当前时间作为加密内容的字符串token")])]),o("div",[t._v("def get_token_str(username):")]),o("div",[t._v("    now_time = str(time.time())")]),o("div",[t._v('    md5 = hashlib.md5(bytes(username, encoding="utf8"))  '),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 加盐，使用用户名作为盐，保证token的唯一性")])]),o("div",[t._v("    md5.update(bytes(now_time, encoding='utf-8'))")]),o("div",[t._v("    return md5.hexdigest()")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 登陆，并且返回当前用户的token")])]),o("div",[t._v("class LoginView(APIView):")]),o("div",[o("font",{attrs:{color:"#FA7A00"}},[t._v("throttle_classes = []")]),t._v(" "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 在全局频率下，当前视图不进行频率认证")])],1),o("div",[o("br")]),o("div",[t._v("    def post(self, request):")]),o("div",[t._v("        username = request.data.get('username')")]),o("div",[t._v("        password = request.data.get('password')")]),o("div",[t._v("        user = User.objects.filter(username=username, password=password).first()")]),o("div",[t._v("        ret = {")]),o("div",[t._v("            'status': 0,")]),o("div",[t._v("            'msg': None")]),o("div",[t._v("        }")]),o("div",[t._v("        if user:")]),o("div",[t._v("            token_str = get_token_str(user.username)  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 获取Token值")])]),o("div",[o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 每次登陆成功后都要修改当前用户的token值")])]),o("div",[t._v("            Token.objects.update_or_create(user=user, defaults={'token': token_str})  "),o("span",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 如果有 user=user 这条数据，那么就修改 token 值，否则就进行添加")])]),o("div",[t._v("            ret['status'] = 1")]),o("div",[t._v("            ret['token'] = token_str")]),o("div",[t._v("        else:")]),o("div",[t._v("            ret['msg'] = '登陆失败'")]),o("div",[o("br")]),o("div",[t._v("        return Response(ret)")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("4.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 局部频率 ->  使用 ")]),o("span",{staticStyle:{"font-size":"14pt"}},[o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("rest-framework 所提供的频率类")])])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{staticStyle:{"font-size":"9pt",color:"rgb(65, 173, 28)"}},[t._v("# rf_throttle.py")])],1),o("div",[o("font",{staticStyle:{"font-size":"9pt"},attrs:{color:"#41AD1C"}},[o("br")])],1),o("div",[t._v("from rest_framework.throttling import "),o("font",{attrs:{color:"#FA7A00"}},[t._v("SimpleRateThrottle")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class MyThrottle("),o("font",{attrs:{color:"#FA7A00"}},[t._v("SimpleRateThrottle")]),t._v("):")],1),o("div",[t._v("    rate = '5/m'  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 每分钟允许访问5次")])],1),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 获取用户IP地址")])],1),o("div",[t._v("    def get_cache_key(self, request, view):")]),o("div",[t._v("        return self.get_ident(request)")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# views.py")])],1),o("div",[o("br")]),o("div",[t._v("from .rf_throttle import *")]),o("div",[t._v("from rest_framework import viewsets")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class BookViewSet(viewsets.ModelViewSet):")]),o("div",[o("font",{attrs:{color:"#FA7A00"}},[t._v("throttle_classes")]),t._v(" = [MyThrottle]")],1),o("div",[t._v("    queryset = Book.objects.all()")]),o("div",[t._v("    serializer_class = BookSerializers")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("5.")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(" 全局频率 -> ")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("使用 ")]),o("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("rest-framework 所提供的频率类")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# rf_throttle.py")])],1),o("div",[o("br")]),o("div",[t._v("from rest_framework.throttling import SimpleRateThrottle")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[t._v("class MyThrottle(SimpleRateThrottle):")]),o("div",[t._v("    scope = '"),o("font",{attrs:{color:"#FA7A00"}},[t._v("visit_rate")]),t._v("'  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 设置全局频率的属性名")])],1),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# 获取用户IP地址")])],1),o("div",[t._v("    def get_cache_key(self, request, view):")]),o("div",[t._v("        return self.get_ident(request)")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[o("br")])]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v("# settings.py")])],1),o("div",[o("br")]),o("div",[t._v("REST_FRAMEWORK = {")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('# "DEFAULT_AUTHENTICATION_CLASSES": ["app01.rf_auth.TokenAuth"],  # 全局认证')])],1),o("div",[o("font",{attrs:{color:"#41AD1C"}},[t._v('    # "DEFAULT_PERMISSION_CLASSES": ["app01.rf_permission.SVIPPermission"]  # 全局权限')])],1),o("div",[t._v('    "DEFAULT_THROTTLE_CLASSES": ["app01.rf_throttle.MyThrottle"],  '),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 全局频率")])],1),o("div",[t._v('    "DEFAULT_THROTTLE_RATES": {')]),o("div",[t._v("        '"),o("font",{attrs:{color:"#FA7A00"}},[t._v("visit_rate")]),t._v("': '5/m'  "),o("font",{attrs:{color:"#41AD1C"}},[t._v("# 每分钟允许访问5次")])],1),o("div",[t._v("    }")]),o("div",[t._v("}")])]),o("div",[o("span",{staticStyle:{"font-size":"14pt","font-family":'"Helvetica Neue"'}},[o("br")])])]),o("div",[o("br")]),o("div",[o("br")])])])])}),[],!1,null,null,null);i.default=e.exports}}]);