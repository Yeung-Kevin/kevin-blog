(window.webpackJsonp=window.webpackJsonp||[]).push([[277],{629:function(r,t,o){"use strict";o.r(t);var v=o(25),i=Object(v.a)({},(function(){var r=this,t=r.$createElement,o=r._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("div",[o("span",[o("div",[o("div",[o("span",{staticStyle:{"font-size":"14pt"}},[r._v("这里就不介绍生产者消费者模型了，不懂的就看回进程中的生产者消费者模型")])]),o("div",[o("br")]),o("ul",[o("li",[o("div",[r._v("使用线程实现生产者消费者模型 -> 线程中没有 JoinableQueue 队列，所以只能通过标识解决不平衡问题")])])]),o("div",[o("br")]),o("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[o("div",[r._v("import time")]),o("div",[r._v("from queue import Queue")]),o("div",[r._v("from threading import Thread")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[r._v("# 生产者")])],1),o("div",[r._v("def producer():")]),o("div",[r._v("    for i in range(50):")]),o("div",[r._v("        q.put('%s.包子' % i)  "),o("font",{attrs:{color:"#E30000"}},[r._v("# 直接调用外部的变量, 因为一个进程中的多个线程是可以直接使用这个进程中的数据，且一个py文件就相当于一个进程")]),o("font",{attrs:{color:"#E30000"}},[r._v("，不按照线程的说法: 函数本来就可以调用外部的变量和方法，因为作用域链")])],1),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#E30000"}}),o("font",{attrs:{color:"#E30000"}},[r._v("# 如果有3个消费进程，那么就要往队列添加3个标识数据")])],1),o("div",[o("br")]),o("div",[r._v("    q.put(None)  "),o("font",{attrs:{color:"#41AD1C"}},[r._v("# 当生产完数据后再向队列中添加多一个标识数据")])],1),o("div",[r._v("    q.put(None)  "),o("font",{attrs:{color:"#41AD1C"}},[r._v("# 当生产完数据后再向队列中添加多一个标识数据")])],1),o("div",[o("br")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[r._v("# 消费者")])],1),o("div",[r._v("def consumer():")]),o("div",[r._v("    while True:")]),o("div",[r._v("        time.sleep(0.5)")]),o("div",[r._v("        bun = q.get() "),o("font",{attrs:{color:"#E30000"}},[r._v(" # 直接调用外部的变量, 因为一个进程中的多个线程是可以直接使用这个进程中的数据，且一个py文件就相当于一个进程")]),o("font",{attrs:{color:"#E30000"}},[r._v("，不按照线程的说法: 函数本来就可以调用外部的变量和方法，因为作用域链")])],1),o("div",[r._v("        if bun is None:  "),o("font",{attrs:{color:"#E30000"}},[r._v("# 判断拿到的数据是不是等于标识数据，如果等于就说明消费者已经获取完所有生产者的数据，可以结束循环")])],1),o("div",[r._v("            break")]),o("div",[r._v("        else:")]),o("div",[r._v("            print('吃了%s' % bun)")]),o("div",[o("br")]),o("div",[o("br")]),o("div",[r._v("q = Queue()")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[r._v("# 生产者线程")])],1),o("div",[r._v("p = Thread(target=producer)")]),o("div",[r._v("p.start()")]),o("div",[o("br")]),o("div",[o("font",{attrs:{color:"#41AD1C"}},[r._v("# 消费者线程")])],1),o("div",[r._v("c1 = Thread(target=consumer)")]),o("div",[r._v("c2 = Thread(target=consumer)")]),o("div",[r._v("c1.start()")]),o("div",[r._v("c2.start()")])]),o("div",[o("br")])]),o("div",[o("br")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);