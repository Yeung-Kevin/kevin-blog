(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{656:function(t,o,i){"use strict";i.r(o);var r=i(25),n=Object(r.a)({},(function(){var t=this,o=t.$createElement,i=t._self._c||o;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("div",[i("span",[i("div",[i("div",[i("div",[i("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("进程池的作用: 比如有100任务需要执行，那么我们不可能开100个进程来执行任务，这样会导致程序执行的很慢，但是我们可以造一个池子里面放着4个进程，每个进程执行一个任务，当其中一个进程执行完了任务，下一个任务就会进入该进程开始执行，以此类推。这样程序就会执行的很快")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("开多进程，进程数超过3个以上就使用进程池来处理")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("font",{staticStyle:{"font-size":"14pt"}},[i("span",{staticStyle:{"font-size":"14pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("调用进程池的方法：")])])],1)]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("map(函数, 可迭代对象)")])])])]),i("li",[i("div",[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("font",{staticStyle:{"font-size":"12pt"}},[i("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("apply(函数, args=('参数一',))")])])],1)])]),i("li",[i("div",[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("apply_async(")])]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("函数, args=('参数一',)")]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v(")")])])])])]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"font-size":"14pt",color:"rgb(227, 0, 0)","font-weight":"bold"}},[t._v("一")]),i("span",{staticStyle:{"font-size":"14pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("定要在 map/apply/apply_async 调用完之后调用  .close() 和 .join() ，且 .join() 方法必须在 .close() 或 .")]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(173, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("teminate() 之后执行不然就会报错")])]),i("div",[i("font",{staticStyle:{"font-size":"14pt"}},[i("br")])],1),i("div",[i("span",{staticStyle:{"font-size":"14pt","white-space":"pre-wrap","font-weight":"bold"}},[t._v("1.")]),t._v(" "),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v(".map(函数，可迭代对象) -> 可迭代对象的长度就是任务的数量，函数每一次都会接收")]),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("可迭代对象里面的一个值进行处理")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("import time")]),i("div",[t._v("from multiprocessing import Pool")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    time.sleep(0.1)")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    print(i)")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5) "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" # 创建num个进程来处理任务，一般都是cpu的核数 + 1")])],1),i("div",[t._v("    p.map(fun, range(1000)) "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" # 使用进程池，完成任务 和 Process（） 一样")])],1),i("div",[t._v("    p.close()  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 关闭进程池，不允许再向进程池添加任务")])],1),i("div",[t._v("    p.join()"),i("font",{attrs:{color:"#E30000"}}),t._v(" "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 等待子进程结束再往下执行，")]),i("font",{attrs:{color:"#E30000"}},[t._v("注意 .join 必须在 close 之后执行，不然就会报错")])],1),i("div",[i("font",{attrs:{color:"#E30000"}}),t._v("print('------ 主进程 ------')")],1)]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("# 对比直接开启1000个进程处理任务 和 使用进程池处理任务的时间")]),i("div",[i("br")]),i("div",[t._v("import time")]),i("div",[t._v("from multiprocessing import Pool")]),i("div",[t._v("from multiprocessing import Process")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    i += 1")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    # 使用进程池处理1000个任务")]),i("div",[t._v("    p = Pool(5)")]),i("div",[t._v("    start = time.time()")]),i("div",[t._v("    p.map(fun, range(1000))")]),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")]),i("div",[t._v("    print('使用进程池处理1000个任务所需的时间：%s' % (time.time() - start))  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 使用进程池处理1000个任务所需的时间：0.14959955215454102")])],1),i("div",[i("br")]),i("div",[t._v("    # 直接开启1000个进程处理任务")]),i("div",[t._v("    l = []")]),i("div",[t._v("    start = time.time()")]),i("div",[t._v("    for i in range(1000):")]),i("div",[t._v("        p = Process(target=fun, args=(i,))")]),i("div",[t._v("        p.start()")]),i("div",[t._v("        l.append(p)")]),i("div",[i("br")]),i("div",[t._v("    [i.join() for i in l]")]),i("div",[t._v("    print('直接开启1000个进程处理任务所需的时间：%s' % (time.time() - start))  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 直接开启1000个进程处理任务所需的时间：46.90270376205444")])],1)]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt","white-space":"pre-wrap",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("2.")]),i("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v(".apply(函数，args=('参数一',)) -> 同步提交任务机制")])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("import time")]),i("div",[t._v("from multiprocessing import Pool")]),i("div",[t._v("from multiprocessing import Process")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    time.sleep(0.1)")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    print(i)")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 创建num个进程来处理任务，一般都是cpu的核数 + 1")])],1),i("div",[t._v("    for i in range(20):")]),i("div",[t._v("        p.apply(fun, args=(i,))  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 使用进程池")])],1),i("div",[t._v("    p.close()  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 关闭进程池，不允许再向进程池添加任务")])],1),i("div",[t._v("    p.join() "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 等待子进程结束再往下执行，")]),i("font",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("注意 .join 必须在 close 之后执行，不然就会报错")])],1),i("div",[i("font",{staticStyle:{color:"rgb(227, 0, 0)"}}),t._v("print('------ 主进程 ------')")],1)]),i("div",[i("br")]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt","white-space":"pre-wrap",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("3.")]),i("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v(".")]),i("span",{staticStyle:{"font-size":"14pt"}},[i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("apply_async")])]),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("(函数，args=('参数一',)) -> 异步提交任务机制")])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("span",{staticStyle:{"font-size":"12pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("当使用了 apply_async 的时候，进程池里面的进程和主进程")]),i("span",{staticStyle:{"font-size":"12pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("也")]),i("span",{staticStyle:{"font-size":"12pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("进行了异步，意思就是主进程不等待子进程就直接结束了（而 Process， 主进程会等待子进程结束后再结束），但进程池的进程还是在运行着只是看不到而已，处理方式：在调用完 ")]),i("span",{staticStyle:{"font-size":"12pt",color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("apply_async 后，执行 .close() 和 .join() ，且 .join() 方法必须在 .close() 或 .")]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(173, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("teminate() 之后执行不然就会报错")])])],1)])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("from multiprocessing import Pool")]),i("div",[t._v("from multiprocessing import Process")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    print(i)")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5) "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" # 创建num个进程来处理任务，一般都是cpu的核数 + 1")])],1),i("div",[t._v("    for i in range(1000):")]),i("div",[t._v("        p.apply_async(fun, args=(i,))  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 使用进程池")])],1),i("div",[t._v("    p.close() "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" # 关闭进程池，不允许再向进程池添加任务")])],1),i("div",[t._v("    p.join()  "),i("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 等待子进程结束再往下执行，")]),i("font",{attrs:{color:"#E30000"}},[t._v("注意 .join 必须在 close 之后执行，不然就会报错")])],1),i("div",[i("font",{attrs:{color:"#E30000"}}),t._v("print('------ 主进程 ------')")],1)]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt","white-space":"pre-wrap",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("4.")]),i("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("使用了进程池后")]),i("span",{staticStyle:{"font-size":"14pt","font-weight":"bold"}},[t._v("都可以的到进程的返回值")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("map")]),i("span",{staticStyle:{"font-size":"12pt","box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),i("span",{staticStyle:{"font-size":"12pt","box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("进程直接返回一个列表")])])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("import time")]),i("div",[t._v("from multiprocessing import Pool")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    time.sleep(0.1)")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    return i")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)")]),i("div",[t._v("    res = p.map(fun, range(20))  "),i("font",{attrs:{color:"#E30000"}},[t._v("# 得到进程的返回值，且返回值是一个列表")])],1),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")]),i("div",[t._v("    print(res) "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]")])],1)]),i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("br")])],1),i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("apply 无")]),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("需使用 .get() 方法获取，")]),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("因为进程直接将值返回")])])],1)])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("from multiprocessing import Pool")]),i("div",[t._v("from multiprocessing import Process")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    return i")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)")]),i("div",[i("br")]),i("div",[t._v("    res_l = []")]),i("div",[t._v("    for i in range(1000):")]),i("div",[t._v("        res = p.apply(fun, args=(i,)) "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 得到进程返回值")])],1),i("div",[t._v("        res_l.append(res)")]),i("div",[i("br")]),i("div",[t._v("    p.close()  ")]),i("div",[t._v("    p.join()")]),i("div",[i("br")]),i("div",[t._v("    [print(i) for i in res_l]  "),i("font",{attrs:{color:"#E30000"}},[t._v("# 无需使用 .get() 方法获取，因为进程直接将值返回")])],1)]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("apply_async ")]),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("需要使用 .get() 方法获取，因为进程返回的是一个对象")])])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[i("span",{staticStyle:{color:"rgb(173, 0, 0)","font-weight":"bold"}},[t._v("不要在循环中进行获取进程的返回值，因为 .get() 方法就是在等待着获取值，这样会将异步执行变成了同步执行，而是将得到的进程对象放进列表中，等待进程结束后再循环列表再使用 .get() 获取返回值")])])])])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("from multiprocessing import Pool")]),i("div",[t._v("from multiprocessing import Process")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("def fun(i):")]),i("div",[t._v("    i += 1")]),i("div",[t._v("    return i")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)")]),i("div",[i("br")]),i("div",[t._v("    res_l = []")]),i("div",[t._v("    for i in range(1000):")]),i("div",[t._v("        res = p.apply_async(fun, args=(i,)) "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 得到进程对象")])],1),i("div",[t._v("        res_l.append(res)")]),i("div",[i("font",{staticStyle:{color:"rgb(173, 0, 0)"}},[i("b",[t._v(" # print(res.get())  # 注意：不要在循环中进行获取进程的返回值，因为 .get() 方法就是在等待着获取值，这样会将异步执行变成了同步执行，而是将得到的进程对象放进列表中，等待进程结束后再循环列表再使用 .get() 获取返回值")])])],1),i("div",[i("br")]),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")]),i("div",[i("br")]),i("div",[t._v("    [print(i.get()) for i in res_l] "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 使用 .get() 方法获取进程对象中的进程返回值")])],1)]),i("div",[i("br")])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt","white-space":"pre-wrap",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("5.")]),i("span",{staticStyle:{"font-size":"medium","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}}),i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","font-weight":"bold"}},[t._v("回调函数")])]),i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"14pt"}},[i("br")])]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"box-sizing":"border-box","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none","white-space":"normal",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("只有 apply 和 apply_async 里面才有回调函数")])])])]),i("li",[i("div",[i("span",{staticStyle:{color:"rgb(227, 0, 0)"}},[t._v("回调函数其实就是接收进程的返回值后再做一次处理")])])]),i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("回调函数是在主进程中完成的")])])]),i("li",[i("div",[t._v("回调函数不能传参，只能接收多进程中函数的返回值")])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("from multiprocessing import Pool")]),i("div",[i("br")]),i("div",[i("font",{staticStyle:{color:"rgb(65, 173, 28)"}},[t._v("# 进程函数")])],1),i("div",[t._v("def fun(i):")]),i("div",[t._v("    return i * '*'")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("# 回调函数")])],1),i("div",[t._v("def cb(arg): "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 接收进程函数的返回值")])],1),i("div",[t._v("    print(arg) "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 处理进程函数的返回值")])],1),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)")]),i("div",[i("br")]),i("div",[t._v("    for i in range(10):")]),i("div",[t._v("        p.apply_async(fun, args=(i,), callback=cb)  "),i("font",{attrs:{color:"#E30000"}},[t._v("# callback = 回调函数")])],1),i("div",[i("br")]),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")])]),i("div",[i("br")]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("如果使用了回调函数得到的返回值也还是和之前一样，是获取进程函数的返回值，而不是回调函数的返回值")])])])]),i("div",[i("br")]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("from multiprocessing import Pool")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("# 进程函数")])],1),i("div",[t._v("def fun(i):")]),i("div",[t._v("    return i * '*'  "),i("font",{attrs:{color:"#E30000"}},[t._v("# 进程函数的返回值")])],1),i("div",[i("br")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#41AD1C"}},[t._v("# 回调函数")])],1),i("div",[t._v("def cb(arg):")]),i("div",[t._v("    arg += '1'")]),i("div",[t._v("    return arg "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 回调函数的返回值")])],1),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    p = Pool(5)")]),i("div",[i("br")]),i("div",[t._v("    r_l = []")]),i("div",[t._v("    for i in range(10):")]),i("div",[t._v("        res = p.apply_async(fun, args=(i,), callback=cb)")]),i("div",[t._v("        r_l.append(res)")]),i("div",[i("br")]),i("div",[t._v("    [print(i.get()) for i in r_l] "),i("font",{attrs:{color:"#E30000"}},[t._v(" # 打印出来的还是进程函数的返回值，而不是回调函数的")])],1),i("div",[i("br")]),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("ul",[i("li",[i("div",[i("span",{staticStyle:{"font-size":"12pt"}},[t._v("回调函数的使用场景")])])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("进程池中任何一个任务一旦处理完了，就立即告知主进程：我好了额，你可以处理我的结果了。主进程则调用一个函数去处理该结果")])]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[i("span",{staticStyle:{"font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("，该函数即回调函数")])])])])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[i("font",{staticStyle:{"font-size":"12pt"}},[i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal","line-height":"1.5"}},[t._v("我们可以把耗时间（阻塞）的任务放到进程池中，然后指定回调函数（主进程负责执行），这样主进程在执行回调函数时就省去了I")]),i("span",{staticStyle:{"white-space":"pre-wrap","overflow-wrap":"break-word","letter-spacing":"normal",orphans:"2","text-indent":"0px","text-transform":"none",widows:"2","word-spacing":"0px","-webkit-text-stroke-width":"0px","font-size":"12pt",color:"rgb(0, 0, 0)","font-family":'"Courier New"',"font-variant-caps":"normal","font-variant-ligatures":"normal"}},[t._v("/O的过程，直接拿到的是任务的结果")])])],1)])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[t._v("回调函数一般会用于爬虫的比较多，因为爬虫需要等待页面返回结果，例如下面的例子")])])])]),i("div",[i("br")]),i("ul",[i("ul",[i("li",[i("div",[t._v("例如: 我们要对10个页面进行页面的请求,获取页面的代码进行分析，我们不可能等待一个页面请求完拿到页面代码进行处理后，再去请求第二个页面，这样会很浪费时间的，我们可以使用进程池和回调函数进行处理，把请求多个页面等待结果的任务放到进程池中执行，然后进程池里的进程就会同时开始请求不同的页面，当其中一个进程的请求返回了结果，就将该结果传递给回调函数进行分析处理")])])])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])]),i("div",{staticStyle:{"box-sizing":"border-box",padding:"8px","font-family":'Monaco, Menlo, Consolas, "Courier New", monospace',"font-size":"12px",color:"rgb(51, 51, 51)","border-radius":"4px","background-color":"rgb(251, 250, 248)",border:"1px solid rgba(0, 0, 0, 0.15)","-en-codeblock":"true"}},[i("div",[t._v("# 上述的例子：对多个页面进行页面的请求, 获取页面的代码进行分析")]),i("div",[i("br")]),i("div",[t._v("import requests")]),i("div",[t._v("from multiprocessing import Pool")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#E30000"}},[t._v("# 把请求的任务放在进程池中处理，因为请求页面需要等待")])],1),i("div",[t._v("def get_url(url):")]),i("div",[t._v("    ret = requests.get(url)")]),i("div",[t._v("    return {")]),i("div",[t._v("        'url': url,")]),i("div",[t._v("        'status_code': ret.status_code, "),i("font",{attrs:{color:"#41AD1C"}},[t._v(" # 获取请求的状态码")])],1),i("div",[t._v("        'content': ret.text  "),i("font",{attrs:{color:"#41AD1C"}},[t._v("# 获取请求成功后的页面代码")])],1),i("div",[t._v("    }")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[i("font",{attrs:{color:"#E30000"}},[t._v("# 等待获取页面的请求结果，然后对请求结果进行处理")])],1),i("div",[t._v("def cb(dic):")]),i("div",[t._v("    print('网址：%s 状态码：%s 页面代码的长度：%s' % (dic['url'], dic['status_code'], len(dic['content'])))")]),i("div",[i("br")]),i("div",[i("br")]),i("div",[t._v("if __name__ == '__main__':")]),i("div",[t._v("    url_l = [")]),i("div",[t._v("        'http://www.baidu.com',")]),i("div",[t._v("        'http://www.sogou.com',")]),i("div",[t._v("        'http://www.hao123.com',")]),i("div",[t._v("        'http://www.yangxiaoer.cc',")]),i("div",[t._v("        'http://www.python.org'")]),i("div",[t._v("    ]")]),i("div",[t._v("    p = Pool(4)")]),i("div",[t._v("    for i in url_l:")]),i("div",[t._v("        p.apply_async(get_url, args=(i,), callback=cb)")]),i("div",[t._v("    p.close()")]),i("div",[t._v("    p.join()")])]),i("div",[i("span",{staticStyle:{"font-size":"14pt"}},[i("br")])])]),i("div",[i("br")])])])])}),[],!1,null,null,null);o.default=n.exports}}]);